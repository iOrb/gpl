================================================================================
SLTP v.0.2.0
================================================================================
================================================================================
(pid: 56396) STARTING STEP #1: Train: Explore the state space of the training instances
================================================================================
------------------------------------------------
 DOMAIN PARAMETERS: 
------------------------------------------------
------------------------------------------------
domain_name: shoot
use_player_as_feature: True
use_margin_as_feature: True
use_next_player_as_feature: True
map_cells: True
use_diagonals_for_map_cells: True
use_adjacency: {'col', 'row'}
use_bidirectional: {}
sorts_to_use: {'cell', 'col', 'row'}
player_can_shoot: {}
player_can_check: {1}
unary_predicates: {}
attaking_mask: {0, 1, 2, 3}
ava_actions: {1: {0, 1, 2, 3}, 2: {0, 1, 2, 3}}
max_actions: {1: 1, 2: 1}
------------------------------------------------
------------------------------------------------
(START Episode 0)
------------------------------------------------
------------------------------------------------
(0) Exploration of the training sample:
------------------------------------------------
2021-05-29 11:46:11 INFO     Expanding train instance: shoot - 9
#A...#
#....#
#....#
#...T#

2021-05-29 11:46:11 INFO     Expanding train instance: shoot - 10
#....#
#.T..#
#....#
#...A#

------------------------------------------------
(0) Generation of the training sample:
------------------------------------------------
2021-05-29 11:46:11 INFO     sample: #states=138, #transition-entries=112, #transitions=112
2021-05-29 11:46:11 INFO     Entire sample: roots: 2, states: 138, transitions: 112 (96 optimal), goals: 68, alive: 70, deadends: 0
2021-05-29 11:46:11 INFO     Printing SAT transition matrix with 138 states, -30 states with some outgoing transition, 8 operators, 112 (non-det) transitions, and 140 (adv) transitions,
------------------------------------------------
(0) Generate the pool of candidate features:
------------------------------------------------
2021-05-29 11:46:11 INFO     Starting generation of feature pool. State sample used to detect redundancies: roots: 2, states: 138, transitions: 112 (96 optimal), goals: 68, alive: 70, deadends: 0
2021-05-29 11:46:11 INFO     Printing sample information to '/home/orbital/ws/research/gpl/code/gpl/workspace/shoot_2/sample.io'
2021-05-29 11:46:11 INFO     Invoking C++ feature generation module
2021-05-29 11:46:11 INFO     Executing "/home/orbital/ws/research/gpl/code/gpl/src/generators/adv/featuregen --complexity-bound 5 --timeout 15000 --dist-complexity-bound 4 --cond-complexity-bound 0 --print-denotations --workspace /home/orbital/ws/research/gpl/code/gpl/workspace/shoot_2" on directory "/home/orbital/ws/research/gpl/code/gpl/experiments"
reading '/home/orbital/ws/research/gpl/code/gpl/workspace/shoot_2/transitions-info.io
BASIS: #concepts=14, #roles=2
ROLES: #roles=6
Generating concepts for k=1. Total concepts: 12 (2, 10, 0, 0, 0, 0)... 0 concepts generated, 3 pruned.
Generating concepts for k=2. Total concepts: 12 (2, 10, 0, 0, 0, 0)... 10 concepts generated, 48 pruned.
Generating concepts for k=3. Total concepts: 22 (2, 10, 10, 0, 0, 0)... 12 concepts generated, 125 pruned.
Generating concepts for k=4. Total concepts: 34 (2, 10, 10, 12, 0, 0)... 25 concepts generated, 339 pruned.
Generating concepts for k=5. Total concepts: 59 (2, 10, 10, 12, 25, 0)... 79 concepts generated, 399 pruned.
Total concepts: 138 (2, 10, 10, 12, 25, 79)... 
A total of 914 concepts were pruned
A total of 0 features were marked as goal-identifying
Generating cardinality features...
Generating distance features...
FEATURES: #features=45, #nullary=4, #boolean=12, #numerical=25, #distance=4, #conditional=0, #comparison=0
Printing concept, role and feature denotations to /home/orbital/ws/research/gpl/code/gpl/workspace/shoot_2/*-denotations.io.txt
Serializing all concepts and features to:
	/home/orbital/ws/research/gpl/code/gpl/workspace/shoot_2/serialized-concepts.io
	/home/orbital/ws/research/gpl/code/gpl/workspace/shoot_2/serialized-features.io
2021-05-29 11:46:15 INFO     Reading feature denotation matrix from /home/orbital/ws/research/gpl/code/gpl/workspace/shoot_2/feature-matrix.io
------------------------------------------------
(0) C++ CNF generation module:
------------------------------------------------
2021-05-29 11:46:15 INFO     Calling C++ MaxSAT module
2021-05-29 11:46:15 INFO     Executing "/home/orbital/ws/research/gpl/code/gpl/src/generators/adv/cnfgen --workspace /home/orbital/ws/research/gpl/code/gpl/workspace/shoot_2 --v_slack 2 --distinguish-goals --initial-sample-size 50 --refinement-batch-size 10 --seed 0 --verbosity 1 --acyclicity topological --encodings_dir  --sampling_strategy full --optimal_steps 3 --consistency_bound 2 --n_features 2 --closed --maxsat_iter 3" on directory "/home/orbital/ws/research/gpl/code/gpl/experiments"
Parsing training data... 
reading '/home/orbital/ws/research/gpl/code/gpl/workspace/shoot_2/transitions-info.io
TransitionSample::read_dump: #states=138, #transitions=112, #transitions (adv)=140
reading '/home/orbital/ws/research/gpl/code/gpl/workspace/shoot_2/feature-matrix.io
FeatureMatrix::read_dump: #states=138, #features=45
Done. Training sample: [states: 138, transitions: 112 (from alive state: 112), unsolvable: 0, goals: 68, unknowns: 0, features: 45, est. size: 0.01 MB.]
Sampling 50 alive states at random


###  STARTING ITERATION 1  ###
Sample [sz=138]: 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 

Number of transitions/equivalence classes: 112/112
Number of necessarily bad transitions/classes: 0/0
Generating CNF encoding for 70 alive states, 112 alive-to-solvable and alive-to-dead transitions and 112 transition equivalence classes
A total of 577 variables were created
	Select(f): 45
	Good(s, a, s'): 112
	Bad(s): 0
	V(s, d): 420
Posting distinguishability constraints
A total of 19247 clauses were created
	Policy completeness [1]: 0
	Transition separation [5,6]: 12544
	V descending along good transitions [X]: 740
	V is total function within bounds [X]: 1120
	Goal separation [X]: 4760
	(Weighted) Select(f): 45
CNF [577 vars, 19247 clauses] generated in 0.23 sec.
Solution with cost 12 found in 0.02sec.

Num Good(s, a, s') selected: 38 (33.93%)
Num Bad(s) selected: 0 (0.00%)
Num selected features: 3 (6.67%)
Features: 
	0: Bool[And(row-has-black_king,row-has-white_king)] [k=3]
	1: Bool[And(row-has-black_king,Exists(adjacent_row,row-has-white_king))] [k=5]
	2: Dist[col-has-white_king;adjacent_col;col-has-black_king] [k=4]
Solution found in iteration #1 is correct!
DNF transition-classifier saved in /home/orbital/ws/research/gpl/code/gpl/workspace/shoot_2/classifier.txt
Total times: Theory generation: 0.24, Solver: 0.02, TOTAL: 0.26
------------------------------------------------
(END Episode 0)
------------------------------------------------
================================================================================
END OF STEP #1: Train: Explore the state space of the training instances. 5.02 CPU sec - 49.29 MB
================================================================================
================================================================================
(pid: 56414) STARTING STEP #2: Testing of the D2L policy
================================================================================

POLICY:
Features (#: 3; total k: 12; max k = 5):
  (A) Bool[And(row-has-black_king,row-has-white_king)] [k=3]
  (B) Bool[And(row-has-black_king,Exists(adjacent_row,row-has-white_king))] [k=5]
  (C) Dist[col-has-white_king;adjacent_col;col-has-black_king] [k=4]
Invariants: C>0,A=0
Policy:
  1. A=0 AND B=0 AND C>0 -> {A ·, B ·, C ↓}
  2. A=0 AND B>0 AND C>0 -> {A ↑, B ↓, C ·}

2021-05-29 11:46:16 INFO     Testing policy in instance: shoot - 0
A....... # .A...... # .A...... # ..A..... # ..A..... # ...A.... # ...A.... # ........ # 
........ # ........ # ........ # ........ # ........ # ........ # ......T. # ...A..T. # 
........ # ........ # ........ # ........ # ......T. # ......T. # ........ # ........ # 
.....T.. # .....T.. # ......T. # ......T. # ........ # ........ # ........ # ........ # 
1 (pl)     2 (pl)     1 (pl)     2 (pl)     1 (pl)     2 (pl)     1 (pl)     2 (pl)     
0 (nm)     1 (nm)     2 (nm)     3 (nm)     4 (nm)     5 (nm)     6 (nm)     7 (nm)     
1 (ne)     2 (ne)     1 (ne)     2 (ne)     1 (ne)     2 (ne)     1 (ne)     2 (ne)     

2021-05-29 11:46:16 INFO     Goal found after expanding 4 nodes
2021-05-29 11:46:16 INFO     The solution was: [2, 2, 2, 1]
2021-05-29 11:46:16 INFO     Testing policy in instance: shoot - 1
...... # ...... # ...... # ...... # ...... # ...... # 
...... # ...... # .T.... # .T.... # ..T... # ..T... # 
.T.... # .T.... # ...... # ...... # ...... # ...... # 
...... # ...... # ...... # ...... # ...... # ...... # 
...... # ...... # ...... # ...... # ...... # ...... # 
...... # ...... # ...... # ...... # ...... # ...... # 
...... # ...... # ...... # ...... # ...... # ...... # 
.....A # ....A. # ....A. # ...A.. # ...A.. # ..A... # 
1 (pl)   2 (pl)   1 (pl)   2 (pl)   1 (pl)   2 (pl)   
0 (nm)   1 (nm)   2 (nm)   3 (nm)   4 (nm)   5 (nm)   
1 (ne)   2 (ne)   1 (ne)   2 (ne)   1 (ne)   2 (ne)   

2021-05-29 11:46:16 INFO     Goal found after expanding 3 nodes
2021-05-29 11:46:16 INFO     The solution was: [3, 3, 3]
2021-05-29 11:46:16 INFO     Testing policy in instance: shoot - 2
A...... # .A..... # .A..... # ..A.... # ..A.... # ...A... # ...A... # ....A.. # ....A.. # .....A. # 
....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # 
....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # 
....... # ....... # ....... # ....... # ....... # ....... # ......T # ......T # .....T. # .....T. # 
....... # ....... # ....... # ....... # ......T # ......T # ....... # ....... # ....... # ....... # 
.....T. # .....T. # ......T # ......T # ....... # ....... # ....... # ....... # ....... # ....... # 
....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # 
1 (pl)    2 (pl)    1 (pl)    2 (pl)    1 (pl)    2 (pl)    1 (pl)    2 (pl)    1 (pl)    2 (pl)    
0 (nm)    1 (nm)    2 (nm)    3 (nm)    4 (nm)    5 (nm)    6 (nm)    7 (nm)    8 (nm)    9 (nm)    
1 (ne)    2 (ne)    1 (ne)    2 (ne)    1 (ne)    2 (ne)    1 (ne)    2 (ne)    1 (ne)    2 (ne)    

2021-05-29 11:46:16 INFO     Goal found after expanding 5 nodes
2021-05-29 11:46:16 INFO     The solution was: [2, 2, 2, 2, 2]
2021-05-29 11:46:16 INFO     Testing policy in instance: shoot - 3
T......... # T......... # .T........ # 
.......... # .......... # .......... # 
.......... # .......... # .......... # 
..A....... # .A........ # .A........ # 
.......... # .......... # .......... # 
.......... # .......... # .......... # 
.......... # .......... # .......... # 
.......... # .......... # .......... # 
.......... # .......... # .......... # 
.......... # .......... # .......... # 
1 (pl)       2 (pl)       1 (pl)       
0 (nm)       1 (nm)       2 (nm)       
1 (ne)       2 (ne)       1 (ne)       

2021-05-29 11:46:16 INFO     Goal found after expanding 1 nodes
2021-05-29 11:46:16 INFO     The solution was: [3]
2021-05-29 11:46:16 INFO     Testing policy in instance: shoot - 4
T... # T... # .T.. # .T.. # 
.... # .... # .... # .... # 
.... # .... # .... # .... # 
.... # .... # .... # .... # 
...A # ..A. # ..A. # .A.. # 
.... # .... # .... # .... # 
.... # .... # .... # .... # 
.... # .... # .... # .... # 
.... # .... # .... # .... # 
.... # .... # .... # .... # 
.... # .... # .... # .... # 
1 (pl) 2 (pl) 1 (pl) 2 (pl) 
0 (nm) 1 (nm) 2 (nm) 3 (nm) 
1 (ne) 2 (ne) 1 (ne) 2 (ne) 

2021-05-29 11:46:16 INFO     Goal found after expanding 2 nodes
2021-05-29 11:46:16 INFO     The solution was: [3, 3]
2021-05-29 11:46:16 INFO     Testing policy in instance: shoot - 5
T........ # T........ # .T....... # .T....... # 
......... # ......... # ......... # ......... # 
......... # ......... # ......... # ......... # 
......... # ......... # ......... # ......... # 
......... # ......... # ......... # ......... # 
......... # ......... # ......... # ......... # 
...A..... # ..A...... # ..A...... # .A....... # 
......... # ......... # ......... # ......... # 
1 (pl)      2 (pl)      1 (pl)      2 (pl)      
0 (nm)      1 (nm)      2 (nm)      3 (nm)      
1 (ne)      2 (ne)      1 (ne)      2 (ne)      

2021-05-29 11:46:16 INFO     Goal found after expanding 2 nodes
2021-05-29 11:46:16 INFO     The solution was: [3, 3]
2021-05-29 11:46:16 INFO     Testing policy in instance: shoot - 6
T... # T... # .... # .... # 
.... # .... # T... # T.A. # 
...A # ..A. # ..A. # .... # 
.... # .... # .... # .... # 
1 (pl) 2 (pl) 1 (pl) 2 (pl) 
0 (nm) 1 (nm) 2 (nm) 3 (nm) 
1 (ne) 2 (ne) 1 (ne) 2 (ne) 

2021-05-29 11:46:16 INFO     Goal found after expanding 2 nodes
2021-05-29 11:46:16 INFO     The solution was: [3, 0]
2021-05-29 11:46:16 INFO     Testing policy in instance: shoot - 7
A... # .A.. # .A.. # .... # 
.... # .... # ...T # .A.T # 
...T # ...T # .... # .... # 
.... # .... # .... # .... # 
1 (pl) 2 (pl) 1 (pl) 2 (pl) 
0 (nm) 1 (nm) 2 (nm) 3 (nm) 
1 (ne) 2 (ne) 1 (ne) 2 (ne) 

2021-05-29 11:46:16 INFO     Goal found after expanding 2 nodes
2021-05-29 11:46:16 INFO     The solution was: [2, 1]
2021-05-29 11:46:16 INFO     Testing policy in instance: shoot - 8













.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 






1 (pl)                 2 (pl)                 1 (pl)                 2 (pl)                 1 (pl)                 2 (pl)                 1 (pl)                 2 (pl)                 1 (pl)                 2 (pl)                 1 (pl)                 2 (pl)                 1 (pl)                 2 (pl)                 1 (pl)                 2 (pl)                 1 (pl)                 2 (pl)                 1 (pl)                 2 (pl)                 1 (pl)                 2 (pl)                 1 (pl)                 2 (pl)                 1 (pl)                 2 (pl)                 1 (pl)                 2 (pl)                 1 (pl)                 2 (pl)                 
0 (nm)                 1 (nm)                 2 (nm)                 3 (nm)                 4 (nm)                 5 (nm)                 6 (nm)                 7 (nm)                 8 (nm)                 9 (nm)                 10 (nm)                11 (nm)                12 (nm)                13 (nm)                14 (nm)                15 (nm)                16 (nm)                17 (nm)                18 (nm)                19 (nm)                20 (nm)                21 (nm)                22 (nm)                23 (nm)                24 (nm)                25 (nm)                26 (nm)                27 (nm)                28 (nm)                29 (nm)                
1 (ne)                 2 (ne)                 1 (ne)                 2 (ne)                 1 (ne)                 2 (ne)                 1 (ne)                 2 (ne)                 1 (ne)                 2 (ne)                 1 (ne)                 2 (ne)                 1 (ne)                 2 (ne)                 1 (ne)                 2 (ne)                 1 (ne)                 2 (ne)                 1 (ne)                 2 (ne)                 1 (ne)                 2 (ne)                 1 (ne)                 2 (ne)                 1 (ne)                 2 (ne)                 1 (ne)                 2 (ne)                 1 (ne)                 2 (ne)                 

2021-05-29 11:46:17 INFO     Goal found after expanding 15 nodes
2021-05-29 11:46:17 INFO     The solution was: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
2021-05-29 11:46:17 INFO     Testing policy in instance: shoot - 9
A... # .A.. # .A.. # ..A. # 
.... # .... # .... # .... # 
.... # .... # .... # .... # 
...T # ...T # ..T. # ..T. # 
1 (pl) 2 (pl) 1 (pl) 2 (pl) 
0 (nm) 1 (nm) 2 (nm) 3 (nm) 
1 (ne) 2 (ne) 1 (ne) 2 (ne) 

2021-05-29 11:46:17 INFO     Goal found after expanding 2 nodes
2021-05-29 11:46:17 INFO     The solution was: [2, 2]
2021-05-29 11:46:17 INFO     Testing policy in instance: shoot - 10
.... # .... # .... # .... # .... # .... # 
.T.. # .T.. # T... # T... # .... # .... # 
.... # .... # .... # .... # T... # TA.. # 
...A # ..A. # ..A. # .A.. # .A.. # .... # 
1 (pl) 2 (pl) 1 (pl) 2 (pl) 1 (pl) 2 (pl) 
0 (nm) 1 (nm) 2 (nm) 3 (nm) 4 (nm) 5 (nm) 
1 (ne) 2 (ne) 1 (ne) 2 (ne) 1 (ne) 2 (ne) 

2021-05-29 11:46:17 INFO     Goal found after expanding 3 nodes
2021-05-29 11:46:17 INFO     The solution was: [3, 3, 0]
2021-05-29 11:46:17 INFO     Learnt policy solves the 100.0% of test instances: 11/11
2021-05-29 11:46:17 INFO     Solved instances: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
2021-05-29 11:46:17 INFO     Unsolved instances: []
================================================================================
END OF STEP #2: Testing of the D2L policy. 1.00 CPU sec - 49.29 MB
================================================================================

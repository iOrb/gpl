================================================================================
SLTP v.0.2.0
================================================================================
================================================================================
(pid: 13389) STARTING STEP #1: Train: Explore the state space of the training instances
================================================================================
------------------------------------------------
 DOMAIN PARAMETERS: 
------------------------------------------------
------------------------------------------------
domain_name: shoot
use_player_as_feature: True
map_cells: False
use_diagonals_for_map_cells: True
use_adjacency: {'row', 'col'}
use_bidirectional: {}
sorts_to_use: {'row', 'cell', 'col'}
player_can_shoot: {}
player_can_check: {1}
unary_predicates: {}
attaking_mask: {0, 1, 2, 3}
ava_actions: {1: {4, 5, 6, 7}, 2: {0, 1, 2, 3}}
max_actions: {1: 1, 2: 1}
------------------------------------------------
------------------------------------------------
(START Episode 0)
------------------------------------------------
------------------------------------------------
(0) Exploration of the training sample:
------------------------------------------------
2021-05-25 10:42:10 INFO     Expanding train instance: shoot - 0
#A.......#
#........#
#........#
#.....T..#

------------------------------------------------
(0) Generation of the training sample:
------------------------------------------------
2021-05-25 10:42:11 INFO     sample: #states=128, #transition-entries=110, #transitions=110
2021-05-25 10:42:11 INFO     Entire sample: roots: 1, states: 128, transitions: 110 (111 optimal), goals: 49, alive: 79, deadends: 0
2021-05-25 10:42:11 INFO     Printing SAT transition matrix with 128 states, -3 states with some outgoing transition, 4 operators, 110 (non-det) transitions, and 138 (adv) transitions,
------------------------------------------------
(0) Generate the pool of candidate features:
------------------------------------------------
2021-05-25 10:42:11 INFO     Starting generation of feature pool. State sample used to detect redundancies: roots: 1, states: 128, transitions: 110 (111 optimal), goals: 49, alive: 79, deadends: 0
2021-05-25 10:42:11 INFO     Printing sample information to '/home/orbital/ws/research/gpl/code/gpl/workspace/shoot_2/sample.io'
2021-05-25 10:42:11 INFO     Invoking C++ feature generation module
2021-05-25 10:42:11 INFO     Executing "/home/orbital/ws/research/gpl/code/gpl/src/generators/adv/featuregen --complexity-bound 5 --timeout 15000 --dist-complexity-bound 4 --cond-complexity-bound 0 --print-denotations --workspace /home/orbital/ws/research/gpl/code/gpl/workspace/shoot_2" on directory "/home/orbital/ws/research/gpl/code/gpl/experiments"
reading '/home/orbital/ws/research/gpl/code/gpl/workspace/shoot_2/transitions-info.io
BASIS: #concepts=11, #roles=2
ROLES: #roles=4
Generating concepts for k=1. Total concepts: 11 (2, 9, 0, 0, 0, 0)... 0 concepts generated, 3 pruned.
Generating concepts for k=2. Total concepts: 11 (2, 9, 0, 0, 0, 0)... 9 concepts generated, 44 pruned.
Generating concepts for k=3. Total concepts: 20 (2, 9, 9, 0, 0, 0)... 10 concepts generated, 106 pruned.
Generating concepts for k=4. Total concepts: 30 (2, 9, 9, 10, 0, 0)... 20 concepts generated, 264 pruned.
Generating concepts for k=5. Total concepts: 50 (2, 9, 9, 10, 20, 0)... 65 concepts generated, 277 pruned.
Total concepts: 115 (2, 9, 9, 10, 20, 65)... 
A total of 694 concepts were pruned
A total of 0 features were marked as goal-identifying
Generating cardinality features...
Generating distance features...
FEATURES: #features=39, #nullary=2, #boolean=12, #numerical=21, #distance=4, #conditional=0, #comparison=0
Printing concept, role and feature denotations to /home/orbital/ws/research/gpl/code/gpl/workspace/shoot_2/*-denotations.io.txt
Serializing all concepts and features to:
	/home/orbital/ws/research/gpl/code/gpl/workspace/shoot_2/serialized-concepts.io
	/home/orbital/ws/research/gpl/code/gpl/workspace/shoot_2/serialized-features.io
2021-05-25 10:42:15 INFO     Reading feature denotation matrix from /home/orbital/ws/research/gpl/code/gpl/workspace/shoot_2/feature-matrix.io
------------------------------------------------
(0) C++ CNF generation module:
------------------------------------------------
2021-05-25 10:42:15 INFO     Calling C++ MaxSAT module
2021-05-25 10:42:15 INFO     Executing "/home/orbital/ws/research/gpl/code/gpl/src/generators/adv/cnfgen --workspace /home/orbital/ws/research/gpl/code/gpl/workspace/shoot_2 --v_slack 2 --distinguish-goals --initial-sample-size 50 --refinement-batch-size 10 --seed 0 --verbosity 1 --acyclicity topological --encodings_dir  --sampling_strategy full --optimal_steps 3 --consistency_bound 2 --n_features 2 --closed --maxsat_iter 3" on directory "/home/orbital/ws/research/gpl/code/gpl/experiments"
Parsing training data... 
reading '/home/orbital/ws/research/gpl/code/gpl/workspace/shoot_2/transitions-info.io
TransitionSample::read_dump: #states=128, #transitions=110, #transitions (adv)=138
reading '/home/orbital/ws/research/gpl/code/gpl/workspace/shoot_2/feature-matrix.io
FeatureMatrix::read_dump: #states=128, #features=39
Done. Training sample: [states: 128, transitions: 110 (from alive state: 110), unsolvable: 0, goals: 49, unknowns: 0, features: 39, est. size: 0.01 MB.]
Sampling 50 alive states at random


###  STARTING ITERATION 1  ###
Sample [sz=128]: 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 

Number of transitions/equivalence classes: 110/110
Number of necessarily bad transitions/classes: 0/0
Generating CNF encoding for 79 alive states, 110 alive-to-solvable and alive-to-dead transitions and 110 transition equivalence classes
A total of 623 variables were created
	Select(f): 39
	Good(s, a, s'): 110
	Bad(s): 0
	V(s, d): 474
Posting distinguishability constraints
A total of 18150 clauses were created
	Policy completeness [1]: 0
	Transition separation [5,6]: 12100
	V descending along good transitions [X]: 830
	V is total function within bounds [X]: 1264
	Goal separation [X]: 3871
	(Weighted) Select(f): 39
CNF [623 vars, 18150 clauses] generated in 0.33 sec.
Solution with cost 14 found in 0.02sec.

Num Good(s, a, s') selected: 63 (57.27%)
Num Bad(s) selected: 0 (0.00%)
Num selected features: 4 (10.26%)
Features: 
	0: Bool[And(col-has-AGENT,col-has-TARGET)] [k=3]
	1: Bool[And(row-has-AGENT,row-has-TARGET)] [k=3]
	2: Dist[col-has-TARGET;adjacent_col;col-has-AGENT] [k=4]
	3: Dist[row-has-TARGET;adjacent_row;row-has-AGENT] [k=4]
Solution found in iteration #1 is correct!
DNF transition-classifier saved in /home/orbital/ws/research/gpl/code/gpl/workspace/shoot_2/classifier.txt
Total times: Theory generation: 0.33, Solver: 0.02, TOTAL: 0.36
------------------------------------------------
(END Episode 0)
------------------------------------------------
================================================================================
END OF STEP #1: Train: Explore the state space of the training instances. 4.68 CPU sec - 42.98 MB
================================================================================
================================================================================
(pid: 13414) STARTING STEP #2: Testing of the D2L policy
================================================================================

POLICY:
Features (#: 4; total k: 14; max k = 4):
  (A) Bool[And(col-has-AGENT,col-has-TARGET)] [k=3]
  (B) Bool[And(row-has-AGENT,row-has-TARGET)] [k=3]
  (C) Dist[col-has-TARGET;adjacent_col;col-has-AGENT] [k=4]
  (D) Dist[row-has-TARGET;adjacent_row;row-has-AGENT] [k=4]
Invariants: C>0,B=0,D>0,A=0
Policy:
  1. A=0 AND B=0 AND C>0 AND D>0 -> {A ·, B ↑, C ↑, D ↓}, {A ↑, B ·, C ↓, D ↑}, {A ↑, B ·, C ↓, D ↓}, {A ·, B ·, C ↓, D ↓}, {A ·, B ↑, C ↓, D ↓}

2021-05-25 10:42:15 INFO     Testing policy in instance: shoot - 0
A....... # ........ # ........ # ........ # 
........ # .A...... # .A...... # ........ # 
........ # ........ # .....T.. # ..A..T.. # 
.....T.. # .....T.. # ........ # ........ # 
1 (p)      2 (p)      1 (p)      2 (p)      
0 (n)      1 (n)      2 (n)      3 (n)      

2021-05-25 10:42:15 INFO     Goal found after expanding 2 nodes
2021-05-25 10:42:15 INFO     The solution was: [6, 6]
2021-05-25 10:42:15 INFO     Testing policy in instance: shoot - 1
...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # 
...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # T..... # T..... # 
.T.... # .T.... # ..T... # ..T... # .T.... # .T.... # T..... # T..... # ...... # A..... # 
...... # ...... # ...... # ...... # ...... # ...... # ...... # .A.... # .A.... # ...... # 
...... # ...... # ...... # ...... # ...... # ..A... # ..A... # ...... # ...... # ...... # 
...... # ...... # ...... # ...A.. # ...A.. # ...... # ...... # ...... # ...... # ...... # 
...... # ....A. # ....A. # ...... # ...... # ...... # ...... # ...... # ...... # ...... # 
.....A # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # 
1 (p)    2 (p)    1 (p)    2 (p)    1 (p)    2 (p)    1 (p)    2 (p)    1 (p)    2 (p)    
0 (n)    1 (n)    2 (n)    3 (n)    4 (n)    5 (n)    6 (n)    7 (n)    8 (n)    9 (n)    

2021-05-25 10:42:15 INFO     Goal found after expanding 5 nodes
2021-05-25 10:42:15 INFO     The solution was: [4, 4, 4, 4, 4]
2021-05-25 10:42:15 INFO     Testing policy in instance: shoot - 2
A...... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # 
....... # .A..... # .A..... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # 
....... # ....... # ....... # ..A.... # ..A.... # ....... # ....... # ....... # ....... # ....... # ....... # 
....... # ....... # ....... # ....... # ....... # ...A... # ...A... # ....... # ....... # ....... # ....... # 
....... # ....... # ....... # ....... # ....... # ....... # ....... # ....A.. # ....A.. # ....... # ....... # 
.....T. # .....T. # ....... # ....... # ....... # ....... # ....... # ....... # ....... # .....A. # .....A. # 
....... # ....... # .....T. # .....T. # ....T.. # ....T.. # .....T. # .....T. # ......T # ......T # .....T. # 
1 (p)     2 (p)     1 (p)     2 (p)     1 (p)     2 (p)     1 (p)     2 (p)     1 (p)     2 (p)     1 (p)     
0 (n)     1 (n)     2 (n)     3 (n)     4 (n)     5 (n)     6 (n)     7 (n)     8 (n)     9 (n)     10 (n)    

2021-05-25 10:42:15 INFO     Goal found after expanding 5 nodes
2021-05-25 10:42:15 INFO     The solution was: [6, 6, 6, 6, 6]
2021-05-25 10:42:15 INFO     Testing policy in instance: shoot - 3
T......... # T......... # .......... # .......... # 
.......... # .......... # T......... # T.A....... # 
.......... # .A........ # .A........ # .......... # 
..A....... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # 
1 (p)        2 (p)        1 (p)        2 (p)        
0 (n)        1 (n)        2 (n)        3 (n)        

2021-05-25 10:42:15 INFO     Goal found after expanding 2 nodes
2021-05-25 10:42:15 INFO     The solution was: [4, 5]
2021-05-25 10:42:15 INFO     Testing policy in instance: shoot - 4
T... # T... # .T.. # .T.. # 
.... # .... # .... # .... # 
.... # .... # .... # .A.. # 
.... # ..A. # ..A. # .... # 
...A # .... # .... # .... # 
.... # .... # .... # .... # 
.... # .... # .... # .... # 
.... # .... # .... # .... # 
.... # .... # .... # .... # 
.... # .... # .... # .... # 
.... # .... # .... # .... # 
1 (p)  2 (p)  1 (p)  2 (p)  
0 (n)  1 (n)  2 (n)  3 (n)  

2021-05-25 10:42:15 INFO     Goal found after expanding 2 nodes
2021-05-25 10:42:15 INFO     The solution was: [4, 4]
2021-05-25 10:42:15 INFO     Testing policy in instance: shoot - 5
T........ # T........ # .T....... # .T....... # 
......... # ......... # ......... # ......... # 
......... # ......... # ......... # ......... # 
......... # ......... # ......... # ......... # 
......... # ......... # ......... # .A....... # 
......... # ..A...... # ..A...... # ......... # 
...A..... # ......... # ......... # ......... # 
......... # ......... # ......... # ......... # 
1 (p)       2 (p)       1 (p)       2 (p)       
0 (n)       1 (n)       2 (n)       3 (n)       

2021-05-25 10:42:15 INFO     Goal found after expanding 2 nodes
2021-05-25 10:42:15 INFO     The solution was: [4, 4]
2021-05-25 10:42:15 INFO     Testing policy in instance: shoot - 6
T... # T... # .T.. # .T.A # 
.... # ..A. # ..A. # .... # 
...A # .... # .... # .... # 
.... # .... # .... # .... # 
1 (p)  2 (p)  1 (p)  2 (p)  
0 (n)  1 (n)  2 (n)  3 (n)  

2021-05-25 10:42:15 INFO     Goal found after expanding 2 nodes
2021-05-25 10:42:15 INFO     The solution was: [4, 5]
2021-05-25 10:42:15 INFO     Testing policy in instance: shoot - 7
A... # .... # .... # .... # .... # 
.... # .A.. # .A.. # .... # .... # 
...T # ...T # .... # ..A. # ..AT # 
.... # .... # ...T # ...T # .... # 
1 (p)  2 (p)  1 (p)  2 (p)  1 (p)  
0 (n)  1 (n)  2 (n)  3 (n)  4 (n)  

2021-05-25 10:42:15 INFO     Goal found after expanding 2 nodes
2021-05-25 10:42:15 INFO     The solution was: [6, 6]
2021-05-25 10:42:15 INFO     Testing policy in instance: shoot - 8
A................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 



.................... # .................... # .................... # .................... # .................... # .................... # .................... # ....A............... # ....A............... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 





.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # ..........A......... # ..........A......... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 









1 (p)                  2 (p)                  1 (p)                  2 (p)                  1 (p)                  2 (p)                  1 (p)                  2 (p)                  1 (p)                  2 (p)                  1 (p)                  2 (p)                  1 (p)                  2 (p)                  1 (p)                  2 (p)                  1 (p)                  2 (p)                  1 (p)                  2 (p)                  1 (p)                  2 (p)                  1 (p)                  2 (p)                  1 (p)                  2 (p)                  1 (p)                  2 (p)                  1 (p)                  2 (p)                  
0 (n)                  1 (n)                  2 (n)                  3 (n)                  4 (n)                  5 (n)                  6 (n)                  7 (n)                  8 (n)                  9 (n)                  10 (n)                 11 (n)                 12 (n)                 13 (n)                 14 (n)                 15 (n)                 16 (n)                 17 (n)                 18 (n)                 19 (n)                 20 (n)                 21 (n)                 22 (n)                 23 (n)                 24 (n)                 25 (n)                 26 (n)                 27 (n)                 28 (n)                 29 (n)                 

2021-05-25 10:42:16 INFO     Goal found after expanding 15 nodes
2021-05-25 10:42:16 INFO     The solution was: [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
2021-05-25 10:42:16 INFO     Learnt policy solves the 100.0% of test instances: 9/9
2021-05-25 10:42:16 INFO     Solved instances: [0, 1, 2, 3, 4, 5, 6, 7, 8]
2021-05-25 10:42:16 INFO     Unsolved instances: []
================================================================================
END OF STEP #2: Testing of the D2L policy. 1.27 CPU sec - 43.44 MB
================================================================================

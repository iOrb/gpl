================================================================================
SLTP v.0.2.0
================================================================================
================================================================================
(pid: 13743) STARTING STEP #1: Train: Explore the state space of the training instances
================================================================================
------------------------------------------------
 DOMAIN PARAMETERS: 
------------------------------------------------
------------------------------------------------
domain_name: checkmate_tactic
use_player_as_feature: True
use_player_to_encode: True
use_next_player_as_feature: False
use_next_player_to_encode: False
use_margin_as_feature: False
use_verbose_margin_as_feature: False
objects_to_ignore: set()
map_cells: True
use_diagonals_for_map_cells: True
use_adjacency: {'row', 'cell', 'col'}
use_distance_2: {'row', 'cell', 'col'}
use_distance_more_than_1: {'row', 'cell', 'col'}
use_bidirectional: {'row', 'cell', 'col'}
sorts_to_use: {'row', 'cell', 'col'}
n_moves: 70
unary_predicates: {'checkmate', 'check', 'stalemate', 'black_has_action'}
game_version: 1
------------------------------------------------
------------------------------------------------
(START Episode 0)
------------------------------------------------
------------------------------------------------
(0) Exploration of the training sample:
------------------------------------------------
2021-06-15 10:58:54 INFO     Expanding train instance: checkmate_tactic - 0
#k..#
#..R#
#K..#

------------------------------------------------
(0) Generation of the training sample:
------------------------------------------------
2021-06-15 10:58:55 INFO     sample: #states=317, #transition-entries=461, #transitions=461
2021-06-15 10:58:55 INFO     Entire sample: roots: 1, states: 317, transitions: 461 (281 optimal), goals: 16, alive: 217, deadends: 84
2021-06-15 10:58:55 INFO     Printing SAT transition matrix with 317 states, 1 states with some outgoing transition, 60 operators, 461 (non-det) transitions, and 244 (adv) transitions,
------------------------------------------------
(0) Generate the pool of candidate features:
------------------------------------------------
2021-06-15 10:58:55 INFO     Starting generation of feature pool. State sample used to detect redundancies: roots: 1, states: 317, transitions: 461 (281 optimal), goals: 16, alive: 217, deadends: 84
2021-06-15 10:58:55 INFO     Printing sample information to '/home/orbital/ws/research/gpl/code/gpl/workspace/checkmate_tactic_2/sample.io'
2021-06-15 10:58:55 INFO     Skipping automatic feature generation: User provided set of handcrafted features
2021-06-15 10:58:55 INFO     Logged feature denotations at '/home/orbital/ws/research/gpl/code/gpl/workspace/checkmate_tactic_2/feature-denotations.txt'
2021-06-15 10:58:55 INFO     Printing feature matrix with shape (317, 8) to '/home/orbital/ws/research/gpl/code/gpl/workspace/checkmate_tactic_2/feature-matrix.io'
------------------------------------------------
(0) C++ CNF generation module:
------------------------------------------------
2021-06-15 10:58:55 INFO     Calling C++ MaxSAT module
2021-06-15 10:58:55 INFO     Executing "/home/orbital/ws/research/gpl/code/gpl/src/generators/adv/cnfgen --workspace /home/orbital/ws/research/gpl/code/gpl/workspace/checkmate_tactic_2 --validate-features 0,1,2,3,4,5,6,7 --v_slack 2 --distinguish-goals --initial-sample-size 20 --refinement-batch-size 50 --seed 0 --verbosity 2 --acyclicity topological --encodings_dir  --sampling_strategy full --optimal_steps 3 --consistency_bound 2 --n_features 2 --closed --maxsat_iter 4 --allow_bad_states --use_weighted_tx" on directory "/home/orbital/ws/research/gpl/code/gpl/experiments"
Parsing training data... 
reading '/home/orbital/ws/research/gpl/code/gpl/workspace/checkmate_tactic_2/transitions-info.io
TransitionSample::read_dump: #states=317, #transitions=461, #transitions (adv)=244
reading '/home/orbital/ws/research/gpl/code/gpl/workspace/checkmate_tactic_2/feature-matrix.io
FeatureMatrix::read_dump: #states=317, #features=8
Done. Training sample: [states: 317, transitions: 461 (from alive state: 461), unsolvable: 84, goals: 16, unknowns: 0, features: 8, est. size: 0.00 MB.]
Sampling 20 alive states at random


###  STARTING ITERATION 1  ###
Sample [sz=317]: 316, 315, 314, 313, 312, 311, 310, 309, 308, 307, 306, 305, 304, 303, 302, 301, 300, 299, 298, 297, 296, 295, 294, 293, 292, 291, 290, 289, 288, 287, 286, 285, 284, 283, 282, 281, 280, 279, 278, 277, 276, 275, 274, 273, 272, 271, 270, 269, 268, 267, 266, 265, 264, 263, 262, 261, 260, 259, 258, 257, 256, 255, 254, 253, 252, 251, 250, 249, 248, 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 

Number of transitions/equivalence classes: 461/461
Number of necessarily bad transitions/classes: 185/185
Generating CNF encoding for 217 alive states, 461 alive-to-solvable and alive-to-dead transitions and 461 transition equivalence classes
A total of 3174 variables were created
	Select(f): 8
	Good(s, a, s'): 461
	Bad(s): 101
	V(s, d): 2604
A total of 21632 clauses were created
	Policy completeness [1]: 0
	Transition separation [5,6]: 0
	V descending along good transitions [X]: 3201
	V is total function within bounds [X]: 14539
	Goal separation [X]: 3472
	(Weighted) Select(f): 8
Writing final DIMACS file...
CNF [3174 vars, 21632 clauses] generated in 0.14 sec.
Calling: open-wbo_static /home/orbital/ws/research/gpl/code/gpl/workspace/checkmate_tactic_2/theory.wsat > /home/orbital/ws/research/gpl/code/gpl/workspace/checkmate_tactic_2/maxsat_solver_run.log
Call returned with exit code 7680
Solution with cost 0 found in 0.05sec.

Good(6, 4, 21) Good(11, 14, 3) Good(12, 14, 35) Good(15, 5, 40) Good(18, 21, 5) Good(20, 17, 54) Good(22, 9, 56) Good(26, 14, 65) Good(43, 12, 77) Good(51, 13, 93) 
Good(55, 21, 103) Good(58, 10, 106) Good(73, 9, 1) Good(0, 0, 1) Good(82, 15, 132) Good(28, 0, 67) Good(85, 13, 135) Good(87, 40, 143) Good(89, 43, 103) Good(8, 2, 14) 
Good(94, 17, 86) Good(105, 27, 156) Good(107, 27, 164) Good(110, 30, 168) Good(112, 26, 40) Good(4, 4, 14) Good(117, 24, 74) Good(219, 52, 266) Good(166, 21, 109) Good(221, 35, 270) 
Good(205, 13, 175) Good(149, 49, 189) Good(241, 52, 262) Good(120, 33, 176) Good(182, 13, 220) Good(81, 15, 125) Good(25, 14, 60) Good(251, 57, 279) Good(271, 39, 176) Good(188, 18, 231) 
Good(68, 35, 119) Good(78, 26, 126) Good(238, 40, 288) Good(147, 44, 88) Good(19, 17, 48) Good(226, 15, 263) Good(294, 30, 164) Good(178, 34, 215) Good(311, 46, 293) Good(102, 28, 156) 
Good(292, 32, 270) Good(305, 3, 314) Good(259, 57, 215) Good(45, 6, 80) Good(282, 14, 261) Good(61, 7, 74) Good(301, 14, 277) Good(280, 54, 276) Good(216, 3, 262) Good(214, 27, 169) 
Good(275, 0, 240) Good(297, 39, 306) Good(100, 39, 151) Good(244, 20, 270) Good(233, 5, 279) Good(118, 0, 172) Good(84, 13, 99) Good(268, 33, 303) Good(213, 27, 260) Good(210, 15, 258) 
Good(209, 16, 165) Good(207, 39, 250) Good(49, 19, 83) Good(204, 13, 162) Good(31, 1, 10) Good(124, 8, 74) Good(254, 46, 270) Good(264, 0, 218) Good(316, 3, 310) Good(194, 51, 240) 
Good(191, 55, 235) Good(236, 54, 287) Good(278, 5, 235) Good(187, 6, 225) Good(283, 14, 232) Good(186, 18, 146) Good(180, 5, 192) Good(170, 24, 111) Good(163, 31, 206) Good(71, 4, 65) 
Good(160, 13, 144) Good(159, 13, 198) Good(155, 40, 193) Good(75, 0, 56) Good(152, 49, 143) Good(145, 44, 86) Good(142, 29, 148) Good(130, 19, 181) Good(157, 43, 197) Good(230, 18, 276) 
Good(122, 17, 151) 
Good(6, 4, 21) Good(11, 14, 3) Good(12, 14, 35) Good(15, 5, 40) Good(18, 21, 5) Good(20, 17, 54) Good(22, 9, 56) Good(26, 14, 65) Good(43, 12, 77) Good(51, 13, 93) 
Good(55, 21, 103) Good(58, 10, 106) Good(73, 9, 1) Good(0, 0, 1) Good(82, 15, 132) Good(28, 0, 67) Good(85, 13, 135) Good(87, 40, 143) Good(89, 43, 103) Good(8, 2, 14) 
Good(94, 17, 86) Good(105, 27, 156) Good(107, 27, 164) Good(110, 30, 168) Good(112, 26, 40) Good(4, 4, 14) Good(117, 24, 74) Good(219, 52, 266) Good(166, 21, 109) Good(221, 35, 270) 
Good(205, 13, 175) Good(149, 49, 189) Good(241, 52, 262) Good(120, 33, 176) Good(182, 13, 220) Good(81, 15, 125) Good(25, 14, 60) Good(251, 57, 279) Good(271, 39, 176) Good(188, 18, 231) 
Good(68, 35, 119) Good(78, 26, 126) Good(238, 40, 288) Good(147, 44, 88) Good(19, 17, 48) Good(226, 15, 263) Good(294, 30, 164) Good(178, 34, 215) Good(311, 46, 293) Good(102, 28, 156) 
Good(292, 32, 270) Good(305, 3, 314) Good(259, 57, 215) Good(45, 6, 80) Good(282, 14, 261) Good(61, 7, 74) Good(301, 14, 277) Good(280, 54, 276) Good(216, 3, 262) Good(214, 27, 169) 
Good(275, 0, 240) Good(297, 39, 306) Good(100, 39, 151) Good(244, 20, 270) Good(233, 5, 279) Good(118, 0, 172) Good(84, 13, 99) Good(268, 33, 303) Good(213, 27, 260) Good(210, 15, 258) 
Good(209, 16, 165) Good(207, 39, 250) Good(49, 19, 83) Good(204, 13, 162) Good(31, 1, 10) Good(124, 8, 74) Good(254, 46, 270) Good(264, 0, 218) Good(316, 3, 310) Good(194, 51, 240) 
Good(191, 55, 235) Good(236, 54, 287) Good(278, 5, 235) Good(187, 6, 225) Good(283, 14, 232) Good(186, 18, 146) Good(180, 5, 192) Good(170, 24, 111) Good(163, 31, 206) Good(71, 4, 65) 
Good(160, 13, 144) Good(159, 13, 198) Good(155, 40, 193) Good(75, 0, 56) Good(152, 49, 143) Good(145, 44, 86) Good(142, 29, 148) Good(130, 19, 181) Good(157, 43, 197) Good(230, 18, 276) 
Good(122, 17, 151) 
Num Good(s, a, s') selected: 101 (21.91%)
Num Bad(s) selected: 0 (0.00%)
Num selected features: 8 (100.00%)
Features: 
	0: Atom[check] [k=1]
	1: Bool[And(col-has-black_king,col-has-white_king)] [k=3]
	2: Bool[And(col-has-black_king,col-has-white_rook)] [k=3]
	3: Dist[row-has-black_king;adjacent_row;row-has-white_rook] [k=4]
	4: Dist[row-has-black_king;adjacent_row;row-has-white_king] [k=4]
	5: Bool[And(cell-has-black_king,Exists(adjacent_cell,cell-has-white_rook))] [k=5]
	6: Bool[And(cell-has-white_king,Exists(adjacent_cell,cell-has-white_rook))] [k=5]
	7: Bool[And(cell-has-black_king,Exists(adjacent_cell,Not(cell-attaked-by-1)))] [k=6]
Solution found in iteration #1 is correct!
DNF transition-classifier saved in /home/orbital/ws/research/gpl/code/gpl/workspace/checkmate_tactic_2/classifier.txt
Total times: Theory generation: 0.14, Solver: 0.05, TOTAL: 0.20
------------------------------------------------
(END Episode 0)
------------------------------------------------
================================================================================
END OF STEP #1: Train: Explore the state space of the training instances. 2.33 CPU sec - 59.36 MB
================================================================================
================================================================================
(pid: 13750) STARTING STEP #2: Testing of the D2L policy
================================================================================

POLICY:
Features (#: 8; total k: 31; max k = 6):
  (0) Atom[check] [k=1]
  (1) Bool[And(col-has-black_king,col-has-white_king)] [k=3]
  (2) Bool[And(col-has-black_king,col-has-white_rook)] [k=3]
  (3) Dist[row-has-black_king;adjacent_row;row-has-white_rook] [k=4]
  (4) Dist[row-has-black_king;adjacent_row;row-has-white_king] [k=4]
  (5) Bool[And(cell-has-black_king,Exists(adjacent_cell,cell-has-white_rook))] [k=5]
  (6) Bool[And(cell-has-white_king,Exists(adjacent_cell,cell-has-white_rook))] [k=5]
  (7) Bool[And(cell-has-black_king,Exists(adjacent_cell,Not(cell-attaked-by-1)))] [k=6]
Invariants: 0=0,3>0,2=0
Policy:
  1. 0=0 AND 1>0 AND 2=0 AND 3>0 AND 4>0 AND 5>0 AND 6>0 AND 7>0 -> {0 ·, 1 ·, 2 ·, 3 ·, 4 ·, 5 ·, 6 ·, 7 ·}, {0 ·, 1 ·, 2 ·, 3 ↑, 4 ·, 5 ↓, 6 ·, 7 ·}
  2. 0=0 AND 1=0 AND 2=0 AND 3>0 AND 4=0 AND 5>0 AND 6>0 AND 7>0 -> {0 ·, 1 ·, 2 ·, 3 ·, 4 ·, 5 ↓, 6 ·, 7 ·}, {0 ·, 1 ·, 2 ·, 3 ·, 4 ·, 5 ·, 6 ·, 7 ·}, {0 ·, 1 ·, 2 ·, 3 ·, 4 ↑, 5 ·, 6 ·, 7 ·}
  3. 0=0 AND 1=0 AND 2=0 AND 3>0 AND 4>0 AND 5=0 AND 6>0 AND 7>0 -> {0 ↑, 1 ·, 2 ↑, 3 ·, 4 ·, 5 ·, 6 ↓, 7 ·}, {0 ↑, 1 ·, 2 ↑, 3 ·, 4 ·, 5 ·, 6 ↓, 7 ↓}, {0 ↑, 1 ·, 2 ·, 3 ↓, 4 ·, 5 ·, 6 ↓, 7 ·}, {0 ↑, 1 ·, 2 ·, 3 ↓, 4 ·, 5 ·, 6 ↓, 7 ↓}, {0 ·, 1 ·, 2 ·, 3 ·, 4 ·, 5 ·, 6 ·, 7 ·}
  4. 0=0 AND 1>0 AND 2=0 AND 3>0 AND 4>0 AND 5=0 AND 6>0 AND 7=0 -> {0 ·, 1 ·, 2 ·, 3 ·, 4 ·, 5 ·, 6 ↓, 7 ↑}
  5. 0=0 AND 1=0 AND 2=0 AND 3>0 AND 4>0 AND 5>0 AND 6>0 AND 7=0 -> {0 ·, 1 ·, 2 ·, 3 ·, 4 ·, 5 ↓, 6 ·, 7 ↑}, {0 ·, 1 ·, 2 ·, 3 ↑, 4 ·, 5 ↓, 6 ·, 7 ↑}
  6. 0=0 AND 1=0 AND 2=0 AND 3>0 AND 4>0 AND 6>0 AND 7>0 -> {0 ·, 1 ·, 2 ·, 3 ·, 4 ↓, 5 ·, 6 ·, 7 ·}
  7. 0=0 AND 1=0 AND 2=0 AND 3>0 AND 4>0 AND 5>0 AND 6=0 AND 7>0 -> {0 ·, 1 ·, 2 ·, 3 ·, 4 ·, 5 ↓, 6 ·, 7 ·}, {0 ·, 1 ·, 2 ·, 3 ↑, 4 ·, 5 ↓, 6 ·, 7 ·}, {0 ↑, 1 ·, 2 ↑, 3 ·, 4 ·, 5 ·, 6 ↑, 7 ·}
  8. 0=0 AND 1=0 AND 2=0 AND 3>0 AND 4>0 AND 6=0 AND 7>0 -> {0 ·, 1 ·, 2 ·, 3 ·, 4 ↓, 5 ·, 6 ↑, 7 ·}
  9. 0=0 AND 1=0 AND 2=0 AND 3>0 AND 4>0 AND 5>0 AND 6>0 AND 7>0 -> {0 ·, 1 ↑, 2 ·, 3 ·, 4 ·, 5 ·, 6 ·, 7 ·}, {0 ↑, 1 ·, 2 ↑, 3 ·, 4 ·, 5 ·, 6 ·, 7 ·}, {0 ·, 1 ·, 2 ·, 3 ·, 4 ↓, 5 ·, 6 ·, 7 ·}
  10. 0=0 AND 1=0 AND 2=0 AND 3>0 AND 4=0 AND 5>0 AND 6>0 AND 7=0 -> {0 ·, 1 ·, 2 ·, 3 ↑, 4 ·, 5 ↓, 6 ↓, 7 ↑}
  11. 0=0 AND 1=0 AND 2=0 AND 3>0 AND 4=0 AND 5=0 AND 6=0 AND 7>0 -> {0 ↑, 1 ·, 2 ↑, 3 ·, 4 ·, 5 ·, 6 ·, 7 ↓}
  12. 0=0 AND 1=0 AND 2=0 AND 3>0 AND 4>0 AND 5=0 AND 6=0 AND 7>0 -> {0 ·, 1 ↑, 2 ·, 3 ·, 4 ·, 5 ·, 6 ↑, 7 ·}, {0 ·, 1 ·, 2 ·, 3 ·, 4 ↓, 5 ·, 6 ↑, 7 ·}
  13. 0=0 AND 1>0 AND 2=0 AND 3>0 AND 4>0 AND 5=0 AND 6=0 AND 7>0 -> {0 ↑, 1 ·, 2 ·, 3 ↓, 4 ·, 5 ·, 6 ·, 7 ↓}
  14. 0=0 AND 1>0 AND 2=0 AND 3>0 AND 4>0 AND 5=0 AND 6>0 AND 7>0 -> {0 ·, 1 ↓, 2 ·, 3 ·, 4 ·, 5 ·, 6 ↓, 7 ·}, {0 ·, 1 ·, 2 ·, 3 ↓, 4 ·, 5 ↑, 6 ·, 7 ·}
  15. 0=0 AND 1=0 AND 2=0 AND 3>0 AND 4=0 AND 5=0 AND 6>0 AND 7>0 -> {0 ·, 1 ·, 2 ·, 3 ·, 4 ↑, 5 ·, 6 ↓, 7 ·}, {0 ·, 1 ·, 2 ·, 3 ·, 4 ·, 5 ↑, 6 ·, 7 ·}
  16. 0=0 AND 2=0 AND 3>0 AND 4>0 AND 5>0 AND 6>0 AND 7=0 -> {0 ↑, 1 ·, 2 ↑, 3 ·, 4 ·, 5 ·, 6 ·, 7 ↑}
  17. 0=0 AND 1>0 AND 2=0 AND 3>0 AND 4>0 AND 5>0 AND 6>0 AND 7=0 -> {0 ·, 1 ·, 2 ·, 3 ·, 4 ·, 5 ↓, 6 ↓, 7 ↑}, {0 ↑, 1 ·, 2 ↑, 3 ·, 4 ·, 5 ·, 6 ·, 7 ↑}
  18. 0=0 AND 1=0 AND 2=0 AND 3>0 AND 4=0 AND 5=0 AND 6>0 AND 7=0 -> {0 ·, 1 ·, 2 ·, 3 ↑, 4 ·, 5 ·, 6 ↓, 7 ↑}
  19. 0=0 AND 1=0 AND 2=0 AND 3>0 AND 5>0 AND 6>0 AND 7=0 -> {0 ↑, 1 ·, 2 ·, 3 ↓, 4 ·, 5 ·, 6 ·, 7 ↑}
  20. 0=0 AND 1=0 AND 2=0 AND 3>0 AND 5>0 AND 6>0 AND 7>0 -> {0 ↑, 1 ·, 2 ·, 3 ↓, 4 ·, 5 ·, 6 ·, 7 ·}

2021-06-15 10:58:56 INFO     Testing policy in instance: checkmate_tactic - 0
k.. # k.R # 
..R # ... # 
K.. # K.. # 
1(pl) 2(pl) 
0(nm) 1(nm) 
2(ne) 1(ne) 
0(de) 0(de) 
0(go) 1(go) 
0(bl) 0(bl) 
0(ch) 1(ch) 
0(st) 0(st) 

2021-06-15 10:58:56 INFO     Goal found after expanding 1 nodes
2021-06-15 10:58:56 INFO     The solution was: ['white_rook_1.2_0.2']
2021-06-15 10:58:56 INFO     Testing policy in instance: checkmate_tactic - -1
..k. # ..k. # ...k # ...k # ..k. # ..k. # ...k # .R.k # .R.. # R... # 
.... # .... # .... # .... # .... # .... # .... # .... # ..k. # ..k. # 
.... # .... # .... # .R.. # .R.. # .R.. # .R.. # .... # .... # .... # 
.RK. # .R.K # .R.K # ...K # ...K # ..K. # ..K. # ..K. # ..K. # ..K. # 
1(pl)  2(pl)  1(pl)  2(pl)  1(pl)  2(pl)  1(pl)  2(pl)  1(pl)  2(pl)  
0(nm)  1(nm)  1(nm)  2(nm)  2(nm)  3(nm)  3(nm)  4(nm)  4(nm)  5(nm)  
2(ne)  1(ne)  2(ne)  1(ne)  2(ne)  1(ne)  2(ne)  1(ne)  2(ne)  1(ne)  
0(de)  0(de)  0(de)  0(de)  0(de)  0(de)  0(de)  0(de)  0(de)  0(de)  
0(go)  0(go)  0(go)  0(go)  0(go)  0(go)  0(go)  0(go)  0(go)  0(go)  
0(bl)  1(bl)  0(bl)  1(bl)  0(bl)  1(bl)  0(bl)  1(bl)  0(bl)  1(bl)  
0(ch)  0(ch)  0(ch)  0(ch)  0(ch)  0(ch)  0(ch)  1(ch)  0(ch)  0(ch)  

R... # ...R # ...R # ..R. # ..R. # 
.k.. # .k.. # k... # k... # .k.. # 
.... # .... # .... # .... # .... # 
..K. # ..K. # ..K. # ..K. # ..K. # 
1(pl)  2(pl)  1(pl)  2(pl)  1(pl)  
5(nm)  6(nm)  6(nm)  7(nm)  7(nm)  
2(ne)  1(ne)  2(ne)  1(ne)  2(ne)  
0(de)  0(de)  0(de)  0(de)  0(de)  
0(go)  0(go)  0(go)  0(go)  0(go)  
0(bl)  1(bl)  0(bl)  1(bl)  0(bl)  
0(ch)  0(ch)  0(ch)  0(ch)  0(ch)  

2021-06-15 10:58:56 WARNING  Testing of policy failed with code: ExitCode.AbstractPolicyNotCompleteOnTestInstances
2021-06-15 10:58:56 INFO     Testing policy in instance: checkmate_tactic - -2
.... # R... # R... # .R.. # .R.. # ..R. # ..R. # R... # R... # R... # 
RK.k # .K.k # .K.. # .K.. # .K.k # .K.k # .K.. # .K.. # .K.k # ...k # 
.... # .... # ...k # ...k # .... # .... # ...k # ...k # .... # K... # 
1(pl)  2(pl)  1(pl)  2(pl)  1(pl)  2(pl)  1(pl)  2(pl)  1(pl)  2(pl)  
0(nm)  1(nm)  1(nm)  2(nm)  2(nm)  3(nm)  3(nm)  4(nm)  4(nm)  5(nm)  
2(ne)  1(ne)  2(ne)  1(ne)  2(ne)  1(ne)  2(ne)  1(ne)  2(ne)  1(ne)  
0(de)  0(de)  0(de)  0(de)  0(de)  0(de)  0(de)  0(de)  0(de)  0(de)  
0(go)  0(go)  0(go)  0(go)  0(go)  0(go)  0(go)  0(go)  0(go)  0(go)  
0(bl)  1(bl)  0(bl)  1(bl)  0(bl)  1(bl)  0(bl)  1(bl)  0(bl)  1(bl)  
0(ch)  0(ch)  0(ch)  0(ch)  0(ch)  0(ch)  0(ch)  0(ch)  0(ch)  0(ch)  

R... # R... # R... # R... # R... # ...R # 
..k. # K.k. # K..k # ...k # .... # .... # 
K... # .... # .... # .K.. # .K.k # .K.k # 
1(pl)  2(pl)  1(pl)  2(pl)  1(pl)  2(pl)  
5(nm)  6(nm)  6(nm)  7(nm)  7(nm)  8(nm)  
2(ne)  1(ne)  2(ne)  1(ne)  2(ne)  1(ne)  
0(de)  0(de)  0(de)  0(de)  0(de)  0(de)  
0(go)  0(go)  0(go)  0(go)  0(go)  1(go)  
0(bl)  1(bl)  0(bl)  1(bl)  0(bl)  0(bl)  
0(ch)  0(ch)  0(ch)  0(ch)  0(ch)  1(ch)  

2021-06-15 10:58:57 INFO     Goal found after expanding 8 nodes
2021-06-15 10:58:57 INFO     The solution was: ['white_rook_1.0_0.0', 'white_rook_0.0_0.1', 'white_rook_0.1_0.2', 'white_rook_0.2_0.0', 'white_king_1.1_2.0', 'white_king_2.0_1.0', 'white_king_1.0_2.1', 'white_rook_0.0_0.3']
2021-06-15 10:58:57 INFO     Testing policy in instance: checkmate_tactic - -3
K.... # ..... # ..... # ..... # ..... # ...R. # ...R. # ..R.. # ..R.. # .R... # 
..R.. # .KR.. # .KR.. # .K.R. # .K.R. # .K... # .K..k # .K..k # .K.k. # .K.k. # 
..... # ..... # ..... # ..... # ....k # ....k # ..... # ..... # ..... # ..... # 
..... # ..... # ...k. # ...k. # ..... # ..... # ..... # ..... # ..... # ..... # 
....k # ....k # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # 
1(pl)   2(pl)   1(pl)   2(pl)   1(pl)   2(pl)   1(pl)   2(pl)   1(pl)   2(pl)   
0(nm)   1(nm)   1(nm)   2(nm)   2(nm)   3(nm)   3(nm)   4(nm)   4(nm)   5(nm)   
2(ne)   1(ne)   2(ne)   1(ne)   2(ne)   1(ne)   2(ne)   1(ne)   2(ne)   1(ne)   
0(de)   0(de)   0(de)   0(de)   0(de)   0(de)   0(de)   0(de)   0(de)   0(de)   
0(go)   0(go)   0(go)   0(go)   0(go)   0(go)   0(go)   0(go)   0(go)   0(go)   
0(bl)   1(bl)   0(bl)   1(bl)   0(bl)   1(bl)   0(bl)   1(bl)   0(bl)   1(bl)   
0(ch)   0(ch)   0(ch)   1(ch)   0(ch)   0(ch)   0(ch)   0(ch)   0(ch)   0(ch)   

.R... # .R... # .R... # .R... # .R... # R.... # R.... # R.... # R.... # 
.K..k # ....k # ...k. # K..k. # K.k.. # K.k.. # K..k. # ...k. # ..k.. # 
..... # K.... # K.... # ..... # ..... # ..... # ..... # K.... # K.... # 
..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # 
..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # 
1(pl)   2(pl)   1(pl)   2(pl)   1(pl)   2(pl)   1(pl)   2(pl)   1(pl)   
5(nm)   6(nm)   6(nm)   7(nm)   7(nm)   8(nm)   8(nm)   9(nm)   9(nm)   
2(ne)   1(ne)   2(ne)   1(ne)   2(ne)   1(ne)   2(ne)   1(ne)   2(ne)   
0(de)   0(de)   0(de)   0(de)   0(de)   0(de)   0(de)   0(de)   0(de)   
0(go)   0(go)   0(go)   0(go)   0(go)   0(go)   0(go)   0(go)   0(go)   
0(bl)   1(bl)   0(bl)   1(bl)   0(bl)   1(bl)   0(bl)   1(bl)   0(bl)   
0(ch)   0(ch)   0(ch)   0(ch)   0(ch)   0(ch)   0(ch)   0(ch)   0(ch)   

2021-06-15 10:58:57 WARNING  Testing of policy failed with code: ExitCode.AbstractPolicyNotCompleteOnTestInstances
2021-06-15 10:58:58 INFO     Testing policy in instance: checkmate_tactic - -4
K..... # K..... # K..... # K..... # 
...... # ...... # ...... # ...... # 
...... # ...... # ..k... # ..k... # 
...k.. # ...k.. # ...... # .R.... # 
...... # .R.... # .R.... # ...... # 
.R.... # ...... # ...... # ...... # 
1(pl)    2(pl)    1(pl)    2(pl)    
0(nm)    1(nm)    1(nm)    2(nm)    
2(ne)    1(ne)    2(ne)    1(ne)    
0(de)    0(de)    0(de)    1(de)    
0(go)    0(go)    0(go)    0(go)    
0(bl)    1(bl)    0(bl)    1(bl)    
0(ch)    0(ch)    0(ch)    0(ch)    

2021-06-15 10:58:58 WARNING  Testing of policy failed with code: ExitCode.DeadEndReached
2021-06-15 10:58:58 INFO     Testing policy in instance: checkmate_tactic - -5
....... # R...... # R...... # R.K.... # R.K.k.. # .RK.k.. # .RK..k. # R.K..k. # R.K.k.. # ..K.k.. # 
RK.k... # .K.k... # .K..k.. # ....k.. # ....... # ....... # ....... # ....... # ....... # R...... # 
....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # 
....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # 
....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # 
....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # 
....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # 
1(pl)     2(pl)     1(pl)     2(pl)     1(pl)     2(pl)     1(pl)     2(pl)     1(pl)     2(pl)     
0(nm)     1(nm)     1(nm)     2(nm)     2(nm)     3(nm)     3(nm)     4(nm)     4(nm)     5(nm)     
2(ne)     1(ne)     2(ne)     1(ne)     2(ne)     1(ne)     2(ne)     1(ne)     2(ne)     1(ne)     
0(de)     0(de)     0(de)     0(de)     0(de)     0(de)     0(de)     0(de)     0(de)     0(de)     
0(go)     0(go)     0(go)     0(go)     0(go)     0(go)     0(go)     0(go)     0(go)     0(go)     
0(bl)     1(bl)     0(bl)     1(bl)     0(bl)     1(bl)     0(bl)     1(bl)     0(bl)     1(bl)     
0(ch)     0(ch)     0(ch)     0(ch)     0(ch)     0(ch)     0(ch)     0(ch)     0(ch)     0(ch)     

..K..k. # ..K..k. # ..K.k.. # ..K.k.. # ..K..k. # .....k. # ....k.. # ....k.. # ...k... # ...k..R # 
R...... # .R..... # .R..... # ...R... # ...R... # .K.R... # .K.R... # .K....R # .K....R # .K..... # 
....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # 
....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # 
....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # 
....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # 
....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # 
1(pl)     2(pl)     1(pl)     2(pl)     1(pl)     2(pl)     1(pl)     2(pl)     1(pl)     2(pl)     
5(nm)     6(nm)     6(nm)     7(nm)     7(nm)     8(nm)     8(nm)     9(nm)     9(nm)     10(nm)    
2(ne)     1(ne)     2(ne)     1(ne)     2(ne)     1(ne)     2(ne)     1(ne)     2(ne)     1(ne)     
0(de)     0(de)     0(de)     0(de)     0(de)     0(de)     0(de)     0(de)     0(de)     0(de)     
0(go)     0(go)     0(go)     0(go)     0(go)     0(go)     0(go)     0(go)     0(go)     0(go)     
0(bl)     1(bl)     0(bl)     1(bl)     0(bl)     1(bl)     0(bl)     1(bl)     0(bl)     1(bl)     
0(ch)     0(ch)     0(ch)     0(ch)     0(ch)     0(ch)     0(ch)     0(ch)     0(ch)     1(ch)     

......R # .....R. # .....R. # ....R.. # 
.K.k... # .K.k... # .K..k.. # .K..k.. # 
....... # ....... # ....... # ....... # 
....... # ....... # ....... # ....... # 
....... # ....... # ....... # ....... # 
....... # ....... # ....... # ....... # 
....... # ....... # ....... # ....... # 
1(pl)     2(pl)     1(pl)     2(pl)     
10(nm)    11(nm)    11(nm)    12(nm)    
2(ne)     1(ne)     2(ne)     1(ne)     
0(de)     0(de)     0(de)     1(de)     
0(go)     0(go)     0(go)     0(go)     
0(bl)     1(bl)     0(bl)     1(bl)     
0(ch)     0(ch)     0(ch)     1(ch)     

2021-06-15 10:58:59 WARNING  Testing of policy failed with code: ExitCode.DeadEndReached
2021-06-15 10:58:59 INFO     Testing policy in instance: checkmate_tactic - -6
........ # R....... # R....... # R.K..... # R.K.k... # .RK.k... # .RK..k.. # R.K..k.. # R.K.k... # ..K.k... # 
RK.k.... # .K.k.... # .K..k... # ....k... # ........ # ........ # ........ # ........ # ........ # R....... # 
........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # 
........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # 
........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # 
........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # 
........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # 
........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # 
1(pl)      2(pl)      1(pl)      2(pl)      1(pl)      2(pl)      1(pl)      2(pl)      1(pl)      2(pl)      
0(nm)      1(nm)      1(nm)      2(nm)      2(nm)      3(nm)      3(nm)      4(nm)      4(nm)      5(nm)      
2(ne)      1(ne)      2(ne)      1(ne)      2(ne)      1(ne)      2(ne)      1(ne)      2(ne)      1(ne)      
0(de)      0(de)      0(de)      0(de)      0(de)      0(de)      0(de)      0(de)      0(de)      0(de)      
0(go)      0(go)      0(go)      0(go)      0(go)      0(go)      0(go)      0(go)      0(go)      0(go)      
0(bl)      1(bl)      0(bl)      1(bl)      0(bl)      1(bl)      0(bl)      1(bl)      0(bl)      1(bl)      
0(ch)      0(ch)      0(ch)      0(ch)      0(ch)      0(ch)      0(ch)      0(ch)      0(ch)      0(ch)      

..K..k.. # ..K..k.. # ..K.k... # ..K.k... # ..K..k.. # .....k.. # ....k... # ....k... # ...k.... # ...k..R. # 
R....... # .R...... # .R...... # ...R.... # ...R.... # .K.R.... # .K.R.... # .K....R. # .K....R. # .K...... # 
........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # 
........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # 
........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # 
........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # 
........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # 
........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # 
1(pl)      2(pl)      1(pl)      2(pl)      1(pl)      2(pl)      1(pl)      2(pl)      1(pl)      2(pl)      
5(nm)      6(nm)      6(nm)      7(nm)      7(nm)      8(nm)      8(nm)      9(nm)      9(nm)      10(nm)     
2(ne)      1(ne)      2(ne)      1(ne)      2(ne)      1(ne)      2(ne)      1(ne)      2(ne)      1(ne)      
0(de)      0(de)      0(de)      0(de)      0(de)      0(de)      0(de)      0(de)      0(de)      0(de)      
0(go)      0(go)      0(go)      0(go)      0(go)      0(go)      0(go)      0(go)      0(go)      0(go)      
0(bl)      1(bl)      0(bl)      1(bl)      0(bl)      1(bl)      0(bl)      1(bl)      0(bl)      1(bl)      
0(ch)      0(ch)      0(ch)      0(ch)      0(ch)      0(ch)      0(ch)      0(ch)      0(ch)      1(ch)      

......R. # .....R.. # .....R.. # ....R... # 
.K.k.... # .K.k.... # .K..k... # .K..k... # 
........ # ........ # ........ # ........ # 
........ # ........ # ........ # ........ # 
........ # ........ # ........ # ........ # 
........ # ........ # ........ # ........ # 
........ # ........ # ........ # ........ # 
........ # ........ # ........ # ........ # 
1(pl)      2(pl)      1(pl)      2(pl)      
10(nm)     11(nm)     11(nm)     12(nm)     
2(ne)      1(ne)      2(ne)      1(ne)      
0(de)      0(de)      0(de)      1(de)      
0(go)      0(go)      0(go)      0(go)      
0(bl)      1(bl)      0(bl)      1(bl)      
0(ch)      0(ch)      0(ch)      1(ch)      

2021-06-15 10:59:01 WARNING  Testing of policy failed with code: ExitCode.DeadEndReached
2021-06-15 10:59:01 INFO     Testing policy in instance: checkmate_tactic - -7
......... # R........ # R........ # R.K...... # R.K.k.... # .RK.k.... # .RK..k... # R.K..k... # R.K.k.... # ..K.k.... # 
RK.k..... # .K.k..... # .K..k.... # ....k.... # ......... # ......... # ......... # ......... # ......... # R........ # 
......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # 
......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # 
......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # 
......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # 
......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # 
......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # 
......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # 
1(pl)       2(pl)       1(pl)       2(pl)       1(pl)       2(pl)       1(pl)       2(pl)       1(pl)       2(pl)       
0(nm)       1(nm)       1(nm)       2(nm)       2(nm)       3(nm)       3(nm)       4(nm)       4(nm)       5(nm)       
2(ne)       1(ne)       2(ne)       1(ne)       2(ne)       1(ne)       2(ne)       1(ne)       2(ne)       1(ne)       
0(de)       0(de)       0(de)       0(de)       0(de)       0(de)       0(de)       0(de)       0(de)       0(de)       
0(go)       0(go)       0(go)       0(go)       0(go)       0(go)       0(go)       0(go)       0(go)       0(go)       
0(bl)       1(bl)       0(bl)       1(bl)       0(bl)       1(bl)       0(bl)       1(bl)       0(bl)       1(bl)       
0(ch)       0(ch)       0(ch)       0(ch)       0(ch)       0(ch)       0(ch)       0(ch)       0(ch)       0(ch)       

..K..k... # ..K..k... # ..K.k.... # ..K.k.... # ..K..k... # .....k... # ....k.... # ....k.... # ...k..... # ...k..R.. # 
R........ # .R....... # .R....... # ...R..... # ...R..... # .K.R..... # .K.R..... # .K....R.. # .K....R.. # .K....... # 
......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # 
......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # 
......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # 
......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # 
......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # 
......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # 
......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # 
1(pl)       2(pl)       1(pl)       2(pl)       1(pl)       2(pl)       1(pl)       2(pl)       1(pl)       2(pl)       
5(nm)       6(nm)       6(nm)       7(nm)       7(nm)       8(nm)       8(nm)       9(nm)       9(nm)       10(nm)      
2(ne)       1(ne)       2(ne)       1(ne)       2(ne)       1(ne)       2(ne)       1(ne)       2(ne)       1(ne)       
0(de)       0(de)       0(de)       0(de)       0(de)       0(de)       0(de)       0(de)       0(de)       0(de)       
0(go)       0(go)       0(go)       0(go)       0(go)       0(go)       0(go)       0(go)       0(go)       0(go)       
0(bl)       1(bl)       0(bl)       1(bl)       0(bl)       1(bl)       0(bl)       1(bl)       0(bl)       1(bl)       
0(ch)       0(ch)       0(ch)       0(ch)       0(ch)       0(ch)       0(ch)       0(ch)       0(ch)       1(ch)       

......R.. # .....R... # .....R... # ....R.... # 
.K.k..... # .K.k..... # .K..k.... # .K..k.... # 
......... # ......... # ......... # ......... # 
......... # ......... # ......... # ......... # 
......... # ......... # ......... # ......... # 
......... # ......... # ......... # ......... # 
......... # ......... # ......... # ......... # 
......... # ......... # ......... # ......... # 
......... # ......... # ......... # ......... # 
1(pl)       2(pl)       1(pl)       2(pl)       
10(nm)      11(nm)      11(nm)      12(nm)      
2(ne)       1(ne)       2(ne)       1(ne)       
0(de)       0(de)       0(de)       1(de)       
0(go)       0(go)       0(go)       0(go)       
0(bl)       1(bl)       0(bl)       1(bl)       
0(ch)       0(ch)       0(ch)       1(ch)       

2021-06-15 10:59:03 WARNING  Testing of policy failed with code: ExitCode.DeadEndReached
2021-06-15 10:59:03 INFO     Testing policy in instance: checkmate_tactic - -8
.......... # R......... # R......... # R.K....... # R.K.k..... # .RK.k..... # .RK..k.... # R.K..k.... # R.K.k..... # ..K.k..... # 
RK.k...... # .K.k...... # .K..k..... # ....k..... # .......... # .......... # .......... # .......... # .......... # R......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
1(pl)        2(pl)        1(pl)        2(pl)        1(pl)        2(pl)        1(pl)        2(pl)        1(pl)        2(pl)        
0(nm)        1(nm)        1(nm)        2(nm)        2(nm)        3(nm)        3(nm)        4(nm)        4(nm)        5(nm)        
2(ne)        1(ne)        2(ne)        1(ne)        2(ne)        1(ne)        2(ne)        1(ne)        2(ne)        1(ne)        
0(de)        0(de)        0(de)        0(de)        0(de)        0(de)        0(de)        0(de)        0(de)        0(de)        
0(go)        0(go)        0(go)        0(go)        0(go)        0(go)        0(go)        0(go)        0(go)        0(go)        
0(bl)        1(bl)        0(bl)        1(bl)        0(bl)        1(bl)        0(bl)        1(bl)        0(bl)        1(bl)        
0(ch)        0(ch)        0(ch)        0(ch)        0(ch)        0(ch)        0(ch)        0(ch)        0(ch)        0(ch)        

..K..k.... # ..K..k.... # ..K.k..... # ..K.k..... # ..K..k.... # .....k.... # ....k..... # ....k..... # ...k...... # ...k..R... # 
R......... # .R........ # .R........ # ...R...... # ...R...... # .K.R...... # .K.R...... # .K....R... # .K....R... # .K........ # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
1(pl)        2(pl)        1(pl)        2(pl)        1(pl)        2(pl)        1(pl)        2(pl)        1(pl)        2(pl)        
5(nm)        6(nm)        6(nm)        7(nm)        7(nm)        8(nm)        8(nm)        9(nm)        9(nm)        10(nm)       
2(ne)        1(ne)        2(ne)        1(ne)        2(ne)        1(ne)        2(ne)        1(ne)        2(ne)        1(ne)        
0(de)        0(de)        0(de)        0(de)        0(de)        0(de)        0(de)        0(de)        0(de)        0(de)        
0(go)        0(go)        0(go)        0(go)        0(go)        0(go)        0(go)        0(go)        0(go)        0(go)        
0(bl)        1(bl)        0(bl)        1(bl)        0(bl)        1(bl)        0(bl)        1(bl)        0(bl)        1(bl)        
0(ch)        0(ch)        0(ch)        0(ch)        0(ch)        0(ch)        0(ch)        0(ch)        0(ch)        1(ch)        

......R... # .....R.... # .....R.... # ....R..... # 
.K.k...... # .K.k...... # .K..k..... # .K..k..... # 
.......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # 
1(pl)        2(pl)        1(pl)        2(pl)        
10(nm)       11(nm)       11(nm)       12(nm)       
2(ne)        1(ne)        2(ne)        1(ne)        
0(de)        0(de)        0(de)        1(de)        
0(go)        0(go)        0(go)        0(go)        
0(bl)        1(bl)        0(bl)        1(bl)        
0(ch)        0(ch)        0(ch)        1(ch)        

2021-06-15 10:59:05 WARNING  Testing of policy failed with code: ExitCode.DeadEndReached
2021-06-15 10:59:05 INFO     Learnt policy solves the 0.2% of test instances: 2/1000
2021-06-15 10:59:05 INFO     Solved instances: [0, -2]
2021-06-15 10:59:05 INFO     Unsolved instances: [-1, -3, -4, -5, -6, -7, -8]
================================================================================
END OF STEP #2: Testing of the D2L policy. 9.49 CPU sec - 59.36 MB
================================================================================

================================================================================
SLTP v.0.2.0
================================================================================
================================================================================
(pid: 14230) STARTING STEP #1: Train: Explore the state space of the training instances
================================================================================
------------------------------------------------
 DOMAIN PARAMETERS: 
------------------------------------------------
------------------------------------------------
domain_name: shoot
use_player_as_feature: True
use_player_to_encode: True
use_next_player_as_feature: False
use_next_player_to_encode: True
use_margin_as_feature: True
objects_to_ignore: set()
map_cells: True
use_diagonals_for_map_cells: True
use_adjacency: {'cell', 'row', 'col'}
use_bidirectional: {}
sorts_to_use: {'cell', 'row', 'col'}
player_can_shoot: {}
player_can_check: {1}
unary_predicates: {}
attaking_mask: {0, 1, 2, 3}
ava_actions: {1: {0, 1, 2, 3}, 2: {0, 1, 2, 3}}
max_actions: {1: 1, 2: 1}
------------------------------------------------
------------------------------------------------
(START Episode 0)
------------------------------------------------
------------------------------------------------
(0) Exploration of the training sample:
------------------------------------------------
2021-06-03 13:52:18 INFO     Expanding train instance: shoot - 11
#.....#
#.T...#
#.....#
#.....#
#....A#

------------------------------------------------
(0) Generation of the training sample:
------------------------------------------------
2021-06-03 13:52:18 INFO     sample: #states=177, #transition-entries=164, #transitions=164
2021-06-03 13:52:18 INFO     Entire sample: roots: 1, states: 177, transitions: 164 (128 optimal), goals: 78, alive: 99, deadends: 0
2021-06-03 13:52:18 INFO     Printing SAT transition matrix with 177 states, -27 states with some outgoing transition, 4 operators, 164 (non-det) transitions, and 198 (adv) transitions,
------------------------------------------------
(0) Generate the pool of candidate features:
------------------------------------------------
2021-06-03 13:52:18 INFO     Starting generation of feature pool. State sample used to detect redundancies: roots: 1, states: 177, transitions: 164 (128 optimal), goals: 78, alive: 99, deadends: 0
2021-06-03 13:52:18 INFO     Printing sample information to '/home/orbital/ws/research/gpl/code/gpl/workspace/shoot_1/sample.io'
2021-06-03 13:52:18 INFO     Invoking C++ feature generation module
2021-06-03 13:52:18 INFO     Executing "/home/orbital/ws/research/gpl/code/gpl/src/generators/adv/featuregen --complexity-bound 5 --timeout 15000 --dist-complexity-bound 4 --cond-complexity-bound 0 --print-denotations --workspace /home/orbital/ws/research/gpl/code/gpl/workspace/shoot_1" on directory "/home/orbital/ws/research/gpl/code/gpl/experiments"
reading '/home/orbital/ws/research/gpl/code/gpl/workspace/shoot_1/transitions-info.io
BASIS: #concepts=14, #roles=3
ROLES: #roles=9
Generating concepts for k=1. Total concepts: 12 (2, 10, 0, 0, 0, 0)... 0 concepts generated, 3 pruned.
Generating concepts for k=2. Total concepts: 12 (2, 10, 0, 0, 0, 0)... 10 concepts generated, 52 pruned.
Generating concepts for k=3. Total concepts: 22 (2, 10, 10, 0, 0, 0)... 15 concepts generated, 150 pruned.
Generating concepts for k=4. Total concepts: 37 (2, 10, 10, 15, 0, 0)... 30 concepts generated, 409 pruned.
Generating concepts for k=5. Total concepts: 67 (2, 10, 10, 15, 30, 0)... 89 concepts generated, 543 pruned.
Total concepts: 156 (2, 10, 10, 15, 30, 89)... 
A total of 1157 concepts were pruned
A total of 0 features were marked as goal-identifying
Generating cardinality features...
Generating distance features...
FEATURES: #features=52, #nullary=2, #boolean=14, #numerical=30, #distance=6, #conditional=0, #comparison=0
Printing concept, role and feature denotations to /home/orbital/ws/research/gpl/code/gpl/workspace/shoot_1/*-denotations.io.txt
Serializing all concepts and features to:
	/home/orbital/ws/research/gpl/code/gpl/workspace/shoot_1/serialized-concepts.io
	/home/orbital/ws/research/gpl/code/gpl/workspace/shoot_1/serialized-features.io
2021-06-03 13:52:33 INFO     Reading feature denotation matrix from /home/orbital/ws/research/gpl/code/gpl/workspace/shoot_1/feature-matrix.io
------------------------------------------------
(0) C++ CNF generation module:
------------------------------------------------
2021-06-03 13:52:33 INFO     Calling C++ MaxSAT module
2021-06-03 13:52:33 INFO     Executing "/home/orbital/ws/research/gpl/code/gpl/src/generators/adv/cnfgen --workspace /home/orbital/ws/research/gpl/code/gpl/workspace/shoot_1 --v_slack 2 --distinguish-goals --initial-sample-size 50 --refinement-batch-size 10 --seed 0 --verbosity 3 --acyclicity topological --encodings_dir  --sampling_strategy full --optimal_steps 3 --consistency_bound 2 --n_features 2 --closed --maxsat_iter 3" on directory "/home/orbital/ws/research/gpl/code/gpl/experiments"
Parsing training data... 
reading '/home/orbital/ws/research/gpl/code/gpl/workspace/shoot_1/transitions-info.io
TransitionSample::read_dump: #states=177, #transitions=164, #transitions (adv)=198
reading '/home/orbital/ws/research/gpl/code/gpl/workspace/shoot_1/feature-matrix.io
FeatureMatrix::read_dump: #states=177, #features=52
Done. Training sample: [states: 177, transitions: 164 (from alive state: 164), unsolvable: 0, goals: 78, unknowns: 0, features: 52, est. size: 0.02 MB.]
Sampling 50 alive states at random


###  STARTING ITERATION 1  ###
Sample [sz=177]: 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 

Number of transitions/equivalence classes: 164/164
Number of necessarily bad transitions/classes: 0/0
Generating CNF encoding for 99 alive states, 164 alive-to-solvable and alive-to-dead transitions and 164 transition equivalence classes
A total of 1008 variables were created
	Select(f): 52
	Good(s, a, s'): 164
	Bad(s): 0
	V(s, d): 792
Posting distinguishability constraints
A total of 39678 clauses were created
	Policy completeness [1]: 0
	Transition separation [5,6]: 26896
	V descending along good transitions [X]: 2086
	V is total function within bounds [X]: 2871
	Goal separation [X]: 7722
	(Weighted) Select(f): 52
Writing final DIMACS file...
CNF [1008 vars, 39678 clauses] generated in 0.50 sec.
Calling: open-wbo_static /home/orbital/ws/research/gpl/code/gpl/workspace/shoot_1/theory.wsat > /home/orbital/ws/research/gpl/code/gpl/workspace/shoot_1/maxsat_solver_run.log
Call returned with exit code 7680
Solution with cost 12 found in 0.04sec.

Good(2, 0, 11) Good(5, 0, 38) Good(7, 0, 18) Good(8, 0, 27) Good(12, 0, 52) Good(13, 0, 58) Good(14, 0, 66) Good(74, 1, 133) Good(75, 1, 135) Good(77, 0, 123) 
Good(60, 1, 128) Good(87, 1, 153) Good(105, 1, 154) Good(114, 1, 158) Good(19, 0, 53) Good(138, 1, 170) Good(10, 0, 41) Good(26, 0, 90) Good(119, 0, 160) Good(57, 0, 122) 
Good(20, 1, 78) Good(143, 1, 172) Good(3, 0, 22) Good(24, 0, 80) Good(25, 0, 85) Good(84, 0, 145) Good(137, 1, 168) Good(110, 1, 156) Good(54, 0, 112) Good(162, 1, 174) 
Good(83, 1, 144) Good(49, 0, 96) Good(16, 0, 62) Good(115, 0, 159) Good(117, 1, 164) Good(43, 1, 103) Good(166, 1, 176) Good(33, 1, 101) Good(4, 0, 31) Good(21, 0, 69) 
Good(61, 0, 129) Good(0, 0, 1) Good(56, 1, 121) Good(47, 1, 108) Good(30, 0, 95) Good(35, 1, 102) Good(29, 1, 94) Good(63, 1, 132) Good(45, 0, 79) Good(9, 1, 50) 
Good(17, 0, 68) 
Good(2, 0, 11) Good(5, 0, 38) Good(7, 0, 18) Good(8, 0, 27) Good(12, 0, 52) Good(13, 0, 58) Good(14, 0, 66) Good(74, 1, 133) Good(75, 1, 135) Good(77, 0, 123) 
Good(60, 1, 128) Good(87, 1, 153) Good(105, 1, 154) Good(114, 1, 158) Good(19, 0, 53) Good(138, 1, 170) Good(10, 0, 41) Good(26, 0, 90) Good(119, 0, 160) Good(57, 0, 122) 
Good(20, 1, 78) Good(143, 1, 172) Good(3, 0, 22) Good(24, 0, 80) Good(25, 0, 85) Good(84, 0, 145) Good(137, 1, 168) Good(110, 1, 156) Good(54, 0, 112) Good(162, 1, 174) 
Good(83, 1, 144) Good(49, 0, 96) Good(16, 0, 62) Good(115, 0, 159) Good(117, 1, 164) Good(43, 1, 103) Good(166, 1, 176) Good(33, 1, 101) Good(4, 0, 31) Good(21, 0, 69) 
Good(61, 0, 129) Good(0, 0, 1) Good(56, 1, 121) Good(47, 1, 108) Good(30, 0, 95) Good(35, 1, 102) Good(29, 1, 94) Good(63, 1, 132) Good(45, 0, 79) Good(9, 1, 50) 
Good(17, 0, 68) 
Num Good(s, a, s') selected: 51 (31.10%)
Num Bad(s) selected: 0 (0.00%)
Num selected features: 3 (5.77%)
Features: 
	0: Bool[And(col-has-black_king,col-has-white_king)] [k=3]
	1: Bool[And(col-has-black_king,Exists(adjacent_col,col-has-white_king))] [k=5]
	2: Dist[row-has-white_king;adjacent_row;row-has-black_king] [k=4]
Solution found in iteration #1 is correct!
DNF transition-classifier saved in /home/orbital/ws/research/gpl/code/gpl/workspace/shoot_1/classifier.txt
Total times: Theory generation: 0.50, Solver: 0.04, TOTAL: 0.55
------------------------------------------------
(END Episode 0)
------------------------------------------------
================================================================================
END OF STEP #1: Train: Explore the state space of the training instances. 15.52 CPU sec - 53.31 MB
================================================================================
================================================================================
(pid: 14258) STARTING STEP #2: Testing of the D2L policy
================================================================================

POLICY:
Features (#: 3; total k: 12; max k = 5):
  (A) Bool[And(col-has-black_king,col-has-white_king)] [k=3]
  (B) Bool[And(col-has-black_king,Exists(adjacent_col,col-has-white_king))] [k=5]
  (C) Dist[row-has-white_king;adjacent_row;row-has-black_king] [k=4]
Invariants: C>0,A=0
Policy:
  1. A=0 AND B>0 AND C>0 -> {A ↑, B ↓, C ·}
  2. A=0 AND B=0 AND C>0 -> {A ·, B ·, C ↓}

2021-06-03 13:52:34 INFO     Testing policy in instance: shoot - 0
A....... # ........ # ........ # ........ # 
........ # A....... # A....... # ........ # 
........ # ........ # .....T.. # A....T.. # 
.....T.. # .....T.. # ........ # ........ # 
1(pl)      2(pl)      1(pl)      2(pl)      
0(nm)      1(nm)      2(nm)      3(nm)      
1(ne)      2(ne)      1(ne)      2(ne)      
0(de)      0(de)      0(de)      0(de)      
0(go)      0(go)      0(go)      1(go)      

2021-06-03 13:52:34 INFO     Goal found after expanding 2 nodes
2021-06-03 13:52:34 INFO     The solution was: [1, 1]
2021-06-03 13:52:34 INFO     Testing policy in instance: shoot - 1
...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # 
...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # 
.T.... # .T.... # ...... # ...... # .T.... # .T.... # ...... # ...... # 
...... # ...... # .T.... # .T.... # ...... # ...... # .T.... # .T...A # 
...... # ...... # ...... # ...... # ...... # .....A # .....A # ...... # 
...... # ...... # ...... # .....A # .....A # ...... # ...... # ...... # 
...... # .....A # .....A # ...... # ...... # ...... # ...... # ...... # 
.....A # ...... # ...... # ...... # ...... # ...... # ...... # ...... # 
1(pl)    2(pl)    1(pl)    2(pl)    1(pl)    2(pl)    1(pl)    2(pl)    
0(nm)    1(nm)    2(nm)    3(nm)    4(nm)    5(nm)    6(nm)    7(nm)    
1(ne)    2(ne)    1(ne)    2(ne)    1(ne)    2(ne)    1(ne)    2(ne)    
0(de)    0(de)    0(de)    0(de)    0(de)    0(de)    0(de)    0(de)    
0(go)    0(go)    0(go)    0(go)    0(go)    0(go)    0(go)    1(go)    

2021-06-03 13:52:34 INFO     Goal found after expanding 4 nodes
2021-06-03 13:52:34 INFO     The solution was: [0, 0, 0, 0]
2021-06-03 13:52:34 INFO     Testing policy in instance: shoot - 2
A...... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # 
....... # A...... # A...... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # 
....... # ....... # ....... # A...... # A...... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # 
....... # ....... # ....... # ....... # ....... # A...... # A...... # ....... # ....... # ....... # ....... # ....... # 
....... # ....... # ....... # ....... # ......T # ......T # ....... # A...... # A...... # ....... # ....... # ....... # 
.....T. # .....T. # ......T # ......T # ....... # ....... # ......T # ......T # ....... # A...... # A...... # ....... # 
....... # ....... # ....... # ....... # ....... # ....... # ....... # ....... # ......T # ......T # .....T. # A....T. # 
1(pl)     2(pl)     1(pl)     2(pl)     1(pl)     2(pl)     1(pl)     2(pl)     1(pl)     2(pl)     1(pl)     2(pl)     
0(nm)     1(nm)     2(nm)     3(nm)     4(nm)     5(nm)     6(nm)     7(nm)     8(nm)     9(nm)     10(nm)    11(nm)    
1(ne)     2(ne)     1(ne)     2(ne)     1(ne)     2(ne)     1(ne)     2(ne)     1(ne)     2(ne)     1(ne)     2(ne)     
0(de)     0(de)     0(de)     0(de)     0(de)     0(de)     0(de)     0(de)     0(de)     0(de)     0(de)     0(de)     
0(go)     0(go)     0(go)     0(go)     0(go)     0(go)     0(go)     0(go)     0(go)     0(go)     0(go)     1(go)     

2021-06-03 13:52:34 INFO     Goal found after expanding 6 nodes
2021-06-03 13:52:34 INFO     The solution was: [1, 1, 1, 1, 1, 1]
2021-06-03 13:52:34 INFO     Testing policy in instance: shoot - 3
T......... # T......... # .T........ # .T........ # 
.......... # .......... # .......... # .......... # 
.......... # ..A....... # ..A....... # .A........ # 
..A....... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # 
1(pl)        2(pl)        1(pl)        2(pl)        
0(nm)        1(nm)        2(nm)        3(nm)        
1(ne)        2(ne)        1(ne)        2(ne)        
0(de)        0(de)        0(de)        0(de)        
0(go)        0(go)        0(go)        1(go)        

2021-06-03 13:52:34 INFO     Goal found after expanding 2 nodes
2021-06-03 13:52:34 INFO     The solution was: [0, 3]
2021-06-03 13:52:34 INFO     Testing policy in instance: shoot - 4
T... # T... # .T.. # .T.. # .... # .... # 
.... # .... # .... # .... # .T.. # .T.A # 
.... # .... # .... # ...A # ...A # .... # 
.... # ...A # ...A # .... # .... # .... # 
...A # .... # .... # .... # .... # .... # 
.... # .... # .... # .... # .... # .... # 
.... # .... # .... # .... # .... # .... # 
.... # .... # .... # .... # .... # .... # 
.... # .... # .... # .... # .... # .... # 
.... # .... # .... # .... # .... # .... # 
.... # .... # .... # .... # .... # .... # 
1(pl)  2(pl)  1(pl)  2(pl)  1(pl)  2(pl)  
0(nm)  1(nm)  2(nm)  3(nm)  4(nm)  5(nm)  
1(ne)  2(ne)  1(ne)  2(ne)  1(ne)  2(ne)  
0(de)  0(de)  0(de)  0(de)  0(de)  0(de)  
0(go)  0(go)  0(go)  0(go)  0(go)  1(go)  

2021-06-03 13:52:34 INFO     Goal found after expanding 3 nodes
2021-06-03 13:52:34 INFO     The solution was: [0, 0, 0]
2021-06-03 13:52:34 INFO     Testing policy in instance: shoot - 5
T........ # T........ # .T....... # .T....... # ......... # ......... # ......... # ......... # 
......... # ......... # ......... # ......... # .T....... # .T....... # ..T...... # ..T...... # 
......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # 
......... # ......... # ......... # ......... # ......... # ...A..... # ...A..... # ..A...... # 
......... # ......... # ......... # ...A..... # ...A..... # ......... # ......... # ......... # 
......... # ...A..... # ...A..... # ......... # ......... # ......... # ......... # ......... # 
...A..... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # 
......... # ......... # ......... # ......... # ......... # ......... # ......... # ......... # 
1(pl)       2(pl)       1(pl)       2(pl)       1(pl)       2(pl)       1(pl)       2(pl)       
0(nm)       1(nm)       2(nm)       3(nm)       4(nm)       5(nm)       6(nm)       7(nm)       
1(ne)       2(ne)       1(ne)       2(ne)       1(ne)       2(ne)       1(ne)       2(ne)       
0(de)       0(de)       0(de)       0(de)       0(de)       0(de)       0(de)       0(de)       
0(go)       0(go)       0(go)       0(go)       0(go)       0(go)       0(go)       1(go)       

2021-06-03 13:52:34 INFO     Goal found after expanding 4 nodes
2021-06-03 13:52:34 INFO     The solution was: [0, 0, 0, 3]
2021-06-03 13:52:34 INFO     Testing policy in instance: shoot - 6
T... # T... # .... # 
.... # ...A # T..A # 
...A # .... # .... # 
.... # .... # .... # 
1(pl)  2(pl)  1(pl)  
0(nm)  1(nm)  2(nm)  
1(ne)  2(ne)  1(ne)  
0(de)  0(de)  0(de)  
0(go)  0(go)  1(go)  

2021-06-03 13:52:34 INFO     Goal found after expanding 1 nodes
2021-06-03 13:52:34 INFO     The solution was: [0]
2021-06-03 13:52:34 INFO     Testing policy in instance: shoot - 7
A... # .... # .... # .... # .... # .... # 
.... # A... # A... # .... # .... # .... # 
...T # ...T # .... # A... # A... # .... # 
.... # .... # ...T # ...T # ..T. # A.T. # 
1(pl)  2(pl)  1(pl)  2(pl)  1(pl)  2(pl)  
0(nm)  1(nm)  2(nm)  3(nm)  4(nm)  5(nm)  
1(ne)  2(ne)  1(ne)  2(ne)  1(ne)  2(ne)  
0(de)  0(de)  0(de)  0(de)  0(de)  0(de)  
0(go)  0(go)  0(go)  0(go)  0(go)  1(go)  

2021-06-03 13:52:34 INFO     Goal found after expanding 3 nodes
2021-06-03 13:52:34 INFO     The solution was: [1, 1, 1]
2021-06-03 13:52:34 INFO     Testing policy in instance: shoot - 8
A................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # A................... # A................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # A................... # A................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # A................... # A................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # A................... # A................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # A................... # A................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # A................... # A................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
...................T # ...................T # ..................T. # ..................T. # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # ...................T # 
.................... # .................... # .................... # .................... # ..................T. # ..................T. # ...................T # ...................T # ..................T. # ..................T. # ...................T # ...................T # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
1(pl)                  2(pl)                  1(pl)                  2(pl)                  1(pl)                  2(pl)                  1(pl)                  2(pl)                  1(pl)                  2(pl)                  1(pl)                  2(pl)                  1(pl)                  
0(nm)                  1(nm)                  2(nm)                  3(nm)                  4(nm)                  5(nm)                  6(nm)                  7(nm)                  8(nm)                  9(nm)                  10(nm)                 11(nm)                 12(nm)                 
1(ne)                  2(ne)                  1(ne)                  2(ne)                  1(ne)                  2(ne)                  1(ne)                  2(ne)                  1(ne)                  2(ne)                  1(ne)                  2(ne)                  1(ne)                  
0(de)                  0(de)                  0(de)                  0(de)                  0(de)                  0(de)                  0(de)                  0(de)                  0(de)                  0(de)                  0(de)                  0(de)                  0(de)                  
0(go)                  0(go)                  0(go)                  0(go)                  0(go)                  0(go)                  0(go)                  0(go)                  0(go)                  0(go)                  0(go)                  0(go)                  0(go)                  

.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
A................... # A................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # A................... # A................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # A................... # A................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # A................... # A................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # A................... # A................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # A................... # A................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # ..................T. # ..................T. # ...................T # ...................T # .................... # A................... # 
.................... # .................... # .................... # ...................T # ...................T # ..................T. # ..................T. # .................... # .................... # .................... # .................... # ...................T # ...................T # 
.................... # ...................T # ...................T # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
...................T # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
2(pl)                  1(pl)                  2(pl)                  1(pl)                  2(pl)                  1(pl)                  2(pl)                  1(pl)                  2(pl)                  1(pl)                  2(pl)                  1(pl)                  2(pl)                  
13(nm)                 14(nm)                 15(nm)                 16(nm)                 17(nm)                 18(nm)                 19(nm)                 20(nm)                 21(nm)                 22(nm)                 23(nm)                 24(nm)                 25(nm)                 
2(ne)                  1(ne)                  2(ne)                  1(ne)                  2(ne)                  1(ne)                  2(ne)                  1(ne)                  2(ne)                  1(ne)                  2(ne)                  1(ne)                  2(ne)                  
0(de)                  0(de)                  0(de)                  0(de)                  0(de)                  0(de)                  0(de)                  0(de)                  0(de)                  0(de)                  0(de)                  0(de)                  0(de)                  
0(go)                  0(go)                  0(go)                  0(go)                  0(go)                  0(go)                  0(go)                  0(go)                  0(go)                  0(go)                  0(go)                  0(go)                  0(go)                  

.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
A................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # A................... # A................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
...................T # ...................T # .................... # A................... # A................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # ...................T # ...................T # .................... # A................... # A................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # ...................T # ...................T # .................... # A................... # A................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # ...................T # ...................T # .................... # A................... # A................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # ...................T # ...................T # ..................T. # A.................T. # 
1(pl)                  2(pl)                  1(pl)                  2(pl)                  1(pl)                  2(pl)                  1(pl)                  2(pl)                  1(pl)                  2(pl)                  1(pl)                  2(pl)                  
26(nm)                 27(nm)                 28(nm)                 29(nm)                 30(nm)                 31(nm)                 32(nm)                 33(nm)                 34(nm)                 35(nm)                 36(nm)                 37(nm)                 
1(ne)                  2(ne)                  1(ne)                  2(ne)                  1(ne)                  2(ne)                  1(ne)                  2(ne)                  1(ne)                  2(ne)                  1(ne)                  2(ne)                  
0(de)                  0(de)                  0(de)                  0(de)                  0(de)                  0(de)                  0(de)                  0(de)                  0(de)                  0(de)                  0(de)                  0(de)                  
0(go)                  0(go)                  0(go)                  0(go)                  0(go)                  0(go)                  0(go)                  0(go)                  0(go)                  0(go)                  0(go)                  1(go)                  

2021-06-03 13:52:35 INFO     Goal found after expanding 19 nodes
2021-06-03 13:52:35 INFO     The solution was: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
2021-06-03 13:52:35 INFO     Testing policy in instance: shoot - 9
A... # .... # .... # .... # 
.... # A... # A... # .... # 
.... # .... # ...T # A..T # 
...T # ...T # .... # .... # 
1(pl)  2(pl)  1(pl)  2(pl)  
0(nm)  1(nm)  2(nm)  3(nm)  
1(ne)  2(ne)  1(ne)  2(ne)  
0(de)  0(de)  0(de)  0(de)  
0(go)  0(go)  0(go)  1(go)  

2021-06-03 13:52:35 INFO     Goal found after expanding 2 nodes
2021-06-03 13:52:35 INFO     The solution was: [1, 1]
2021-06-03 13:52:35 INFO     Testing policy in instance: shoot - 10
.... # .... # .T.. # .T.. # T... # T..A # 
.T.. # .T.. # .... # ...A # ...A # .... # 
.... # ...A # ...A # .... # .... # .... # 
...A # .... # .... # .... # .... # .... # 
1(pl)  2(pl)  1(pl)  2(pl)  1(pl)  2(pl)  
0(nm)  1(nm)  2(nm)  3(nm)  4(nm)  5(nm)  
1(ne)  2(ne)  1(ne)  2(ne)  1(ne)  2(ne)  
0(de)  0(de)  0(de)  0(de)  0(de)  0(de)  
0(go)  0(go)  0(go)  0(go)  0(go)  1(go)  

2021-06-03 13:52:35 INFO     Goal found after expanding 3 nodes
2021-06-03 13:52:35 INFO     The solution was: [0, 0, 0]
2021-06-03 13:52:35 INFO     Learnt policy solves the 100.0% of test instances: 11/11
2021-06-03 13:52:35 INFO     Solved instances: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
2021-06-03 13:52:35 INFO     Unsolved instances: []
================================================================================
END OF STEP #2: Testing of the D2L policy. 1.31 CPU sec - 53.31 MB
================================================================================

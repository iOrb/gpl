================================================================================
SLTP v.0.2.0
================================================================================
================================================================================
(pid: 12395) STARTING STEP #1: Train: Explore the state space of the training instances
================================================================================
------------------------------------------------
 DOMAIN PARAMETERS: 
------------------------------------------------
------------------------------------------------
domain_name: space_invaders
use_player_as_feature: True
map_cells: True
use_diagonals_for_map_cells: False
use_adjacency: {'col'}
use_bidirectional: {}
sorts_to_use: {'col', 'cell'}
unary_predicates: {}
predicates_arity_1: {}
agent_has_to_shoot: False
adv_can_move_down: True
adv_can_move_up: False
adv_can_kill_agent: False
max_actions: {1: 1, 2: 1}
target_columns: False
------------------------------------------------
------------------------------------------------
(START Episode 0)
------------------------------------------------
------------------------------------------------
(0) Exploration of the training sample:
------------------------------------------------
2021-05-25 10:28:36 INFO     Expanding train instance: space_invaders - 0
#T.MM#
#....#
#....#
#....#
#....#
#..A.#

2021-05-25 10:28:36 INFO     Expanding train instance: space_invaders - 17
#M..M#
#T..M#
#....#
#....#
#..A.#

2021-05-25 10:28:37 INFO     Expanding train instance: space_invaders - 18
#M...M#
#T...M#
#.....#
#...A.#

------------------------------------------------
(0) Generation of the training sample:
------------------------------------------------
2021-05-25 10:28:37 INFO     sample: #states=254, #transition-entries=269, #transitions=269
2021-05-25 10:28:37 INFO     Entire sample: roots: 3, states: 254, transitions: 269 (277 optimal), goals: 12, alive: 242, deadends: 0
2021-05-25 10:28:37 INFO     Printing SAT transition matrix with 254 states, 160 states with some outgoing transition, 6 operators, 269 (non-det) transitions, and 223 (adv) transitions,
------------------------------------------------
(0) Generate the pool of candidate features:
------------------------------------------------
2021-05-25 10:28:37 INFO     Starting generation of feature pool. State sample used to detect redundancies: roots: 3, states: 254, transitions: 269 (277 optimal), goals: 12, alive: 242, deadends: 0
2021-05-25 10:28:37 INFO     Printing sample information to '/home/orbital/ws/research/gpl/code/gpl/workspace/space_invaders_2/sample.io'
2021-05-25 10:28:37 INFO     Invoking C++ feature generation module
2021-05-25 10:28:37 INFO     Executing "/home/orbital/ws/research/gpl/code/gpl/src/generators/adv/featuregen --complexity-bound 5 --timeout 15000 --dist-complexity-bound 4 --cond-complexity-bound 0 --print-denotations --workspace /home/orbital/ws/research/gpl/code/gpl/workspace/space_invaders_2" on directory "/home/orbital/ws/research/gpl/code/gpl/experiments"
reading '/home/orbital/ws/research/gpl/code/gpl/workspace/space_invaders_2/transitions-info.io
BASIS: #concepts=10, #roles=1
ROLES: #roles=2
Generating concepts for k=1. Total concepts: 10 (2, 8, 0, 0, 0, 0)... 0 concepts generated, 3 pruned.
Generating concepts for k=2. Total concepts: 10 (2, 8, 0, 0, 0, 0)... 6 concepts generated, 38 pruned.
Generating concepts for k=3. Total concepts: 16 (2, 8, 6, 0, 0, 0)... 9 concepts generated, 63 pruned.
Generating concepts for k=4. Total concepts: 25 (2, 8, 6, 9, 0, 0)... 23 concepts generated, 146 pruned.
Generating concepts for k=5. Total concepts: 48 (2, 8, 6, 9, 23, 0)... 61 concepts generated, 188 pruned.
Total concepts: 109 (2, 8, 6, 9, 23, 61)... 
A total of 438 concepts were pruned
A total of 0 features were marked as goal-identifying
Generating cardinality features...
Generating distance features...
FEATURES: #features=87, #nullary=2, #boolean=20, #numerical=63, #distance=2, #conditional=0, #comparison=0
Printing concept, role and feature denotations to /home/orbital/ws/research/gpl/code/gpl/workspace/space_invaders_2/*-denotations.io.txt
Serializing all concepts and features to:
	/home/orbital/ws/research/gpl/code/gpl/workspace/space_invaders_2/serialized-concepts.io
	/home/orbital/ws/research/gpl/code/gpl/workspace/space_invaders_2/serialized-features.io
2021-05-25 10:28:39 INFO     Reading feature denotation matrix from /home/orbital/ws/research/gpl/code/gpl/workspace/space_invaders_2/feature-matrix.io
------------------------------------------------
(0) C++ CNF generation module:
------------------------------------------------
2021-05-25 10:28:39 INFO     Calling C++ MaxSAT module
2021-05-25 10:28:39 INFO     Executing "/home/orbital/ws/research/gpl/code/gpl/src/generators/adv/cnfgen --workspace /home/orbital/ws/research/gpl/code/gpl/workspace/space_invaders_2 --v_slack 2 --distinguish-goals --initial-sample-size 100 --refinement-batch-size 200 --seed 0 --verbosity 2 --acyclicity topological --encodings_dir  --sampling_strategy full --optimal_steps 3 --consistency_bound 2 --n_features 2 --closed --maxsat_iter 20" on directory "/home/orbital/ws/research/gpl/code/gpl/experiments"
Parsing training data... 
reading '/home/orbital/ws/research/gpl/code/gpl/workspace/space_invaders_2/transitions-info.io
TransitionSample::read_dump: #states=254, #transitions=269, #transitions (adv)=223
reading '/home/orbital/ws/research/gpl/code/gpl/workspace/space_invaders_2/feature-matrix.io
FeatureMatrix::read_dump: #states=254, #features=87
Done. Training sample: [states: 254, transitions: 269 (from alive state: 269), unsolvable: 0, goals: 12, unknowns: 0, features: 87, est. size: 0.04 MB.]
Sampling 100 alive states at random


###  STARTING ITERATION 1  ###
Sample [sz=254]: 253, 252, 251, 250, 249, 248, 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 

Number of transitions/equivalence classes: 269/269
Number of necessarily bad transitions/classes: 0/0
Generating CNF encoding for 242 alive states, 269 alive-to-solvable and alive-to-dead transitions and 269 transition equivalence classes
A total of 7616 variables were created
	Select(f): 87
	Good(s, a, s'): 269
	Bad(s): 0
	V(s, d): 7260
Posting distinguishability constraints
A total of 189939 clauses were created
	Policy completeness [1]: 0
	Transition separation [5,6]: 72361
	V descending along good transitions [X]: 8903
	V is total function within bounds [X]: 105512
	Goal separation [X]: 2904
	(Weighted) Select(f): 87
Writing final DIMACS file...
CNF [7616 vars, 189939 clauses] generated in 3.10 sec.
Calling: open-wbo_static /home/orbital/ws/research/gpl/code/gpl/workspace/space_invaders_2/theory.wsat > /home/orbital/ws/research/gpl/code/gpl/workspace/space_invaders_2/maxsat_solver_run.log
Call returned with exit code 7680
Solution with cost 6 found in 0.25sec.

Good(0, 1, 2) Good(2, 1, 5) Good(7, 0, 11) Good(8, 1, 12) Good(9, 1, 14) Good(137, 2, 104) Good(142, 3, 144) Good(143, 3, 134) Good(147, 5, 149) Good(35, 1, 54) 
Good(150, 5, 151) Good(151, 4, 152) Good(20, 0, 30) Good(153, 5, 155) Good(54, 1, 62) Good(155, 4, 158) Good(120, 2, 102) Good(159, 4, 161) Good(67, 0, 72) Good(65, 0, 29) 
Good(166, 4, 174) Good(69, 0, 73) Good(136, 2, 102) Good(169, 4, 178) Good(161, 4, 163) Good(31, 1, 17) Good(166, 5, 175) Good(209, 5, 163) Good(122, 2, 126) Good(176, 5, 191) 
Good(162, 4, 167) Good(178, 4, 195) Good(181, 5, 200) Good(175, 4, 188) Good(190, 4, 171) Good(192, 5, 206) Good(145, 5, 147) Good(186, 4, 200) Good(173, 4, 183) Good(192, 4, 198) 
Good(194, 5, 208) Good(55, 0, 17) Good(127, 3, 118) Good(170, 5, 179) Good(196, 5, 161) Good(227, 5, 239) Good(199, 5, 188) Good(174, 5, 188) Good(30, 0, 46) Good(44, 0, 58) 
Good(212, 5, 231) Good(241, 5, 250) Good(129, 3, 139) Good(229, 5, 242) Good(182, 5, 171) Good(73, 1, 17) Good(154, 5, 152) Good(237, 5, 247) Good(177, 4, 193) Good(168, 4, 176) 
Good(124, 3, 93) Good(236, 5, 245) Good(146, 5, 148) Good(82, 2, 85) Good(224, 5, 237) Good(230, 5, 244) Good(89, 3, 85) Good(194, 4, 207) Good(228, 5, 240) Good(201, 5, 218) 
Good(42, 0, 55) Good(251, 5, 223) Good(23, 1, 27) Good(100, 2, 108) Good(197, 5, 210) Good(246, 5, 207) Good(249, 5, 252) Good(91, 2, 93) Good(238, 5, 248) Good(130, 2, 140) 
Good(202, 4, 219) Good(234, 4, 189) Good(1, 1, 3) Good(204, 4, 220) Good(66, 0, 33) Good(184, 4, 172) Good(27, 0, 17) Good(180, 5, 198) Good(117, 2, 130) Good(217, 4, 175) 
Good(133, 3, 143) Good(165, 4, 172) Good(19, 0, 29) Good(216, 4, 173) Good(207, 5, 226) Good(225, 5, 176) Good(235, 4, 213) Good(215, 4, 171) Good(138, 2, 106) Good(198, 5, 213) 
Good(187, 4, 202) Good(250, 5, 253) Good(208, 4, 226) Good(176, 4, 179) Good(205, 4, 221) Good(211, 5, 229) Good(47, 1, 10) Good(232, 4, 191) Good(131, 3, 94) Good(4, 1, 9) 
Good(128, 2, 118) Good(60, 1, 17) Good(58, 1, 17) Good(203, 4, 214) Good(160, 5, 156) Good(233, 4, 185) Good(126, 3, 134) Good(222, 4, 231) Good(125, 3, 132) Good(84, 3, 87) 
Good(57, 0, 22) Good(106, 2, 118) Good(231, 5, 213) Good(45, 0, 32) Good(116, 2, 128) Good(114, 2, 103) Good(101, 3, 109) Good(111, 2, 127) Good(6, 0, 10) Good(111, 3, 128) 
Good(124, 2, 131) Good(110, 3, 126) Good(108, 2, 123) Good(181, 4, 199) Good(85, 3, 90) Good(107, 2, 109) Good(23, 0, 31) Good(47, 0, 60) Good(107, 3, 121) Good(33, 0, 43) 
Good(24, 0, 32) Good(243, 5, 239) Good(112, 3, 102) Good(105, 3, 118) Good(104, 2, 113) Good(80, 3, 84) Good(63, 0, 72) Good(97, 2, 105) Good(11, 0, 22) Good(92, 3, 88) 
Good(96, 2, 103) Good(41, 0, 57) Good(97, 3, 106) Good(95, 3, 102) Good(93, 2, 94) Good(83, 3, 86) Good(78, 3, 81) Good(77, 3, 79) Good(75, 0, 29) Good(72, 0, 17) 
Good(69, 1, 72) Good(21, 0, 27) Good(59, 0, 68) Good(76, 3, 78) Good(56, 0, 68) Good(53, 1, 61) Good(200, 4, 188) Good(52, 0, 59) Good(50, 0, 10) Good(48, 0, 32) 
Good(157, 5, 154) Good(164, 5, 171) Good(206, 4, 213) Good(44, 1, 55) Good(40, 0, 29) Good(196, 4, 209) Good(99, 2, 107) Good(38, 0, 56) Good(222, 5, 235) Good(37, 0, 55) 
Good(28, 0, 43) Good(26, 1, 36) Good(25, 1, 34) Good(16, 0, 28) Good(15, 0, 27) Good(13, 1, 26) Good(10, 0, 17) 
Good(0, 1, 2) Good(2, 1, 5) Good(7, 0, 11) Good(8, 1, 12) Good(9, 1, 14) Good(137, 2, 104) Good(142, 3, 144) Good(143, 3, 134) Good(147, 5, 149) Good(35, 1, 54) 
Good(150, 5, 151) Good(151, 4, 152) Good(20, 0, 30) Good(153, 5, 155) Good(54, 1, 62) Good(155, 4, 158) Good(120, 2, 102) Good(159, 4, 161) Good(67, 0, 72) Good(65, 0, 29) 
Good(166, 4, 174) Good(69, 0, 73) Good(136, 2, 102) Good(169, 4, 178) Good(161, 4, 163) Good(31, 1, 17) Good(166, 5, 175) Good(209, 5, 163) Good(122, 2, 126) Good(176, 5, 191) 
Good(162, 4, 167) Good(178, 4, 195) Good(181, 5, 200) Good(175, 4, 188) Good(190, 4, 171) Good(192, 5, 206) Good(145, 5, 147) Good(186, 4, 200) Good(173, 4, 183) Good(192, 4, 198) 
Good(194, 5, 208) Good(55, 0, 17) Good(127, 3, 118) Good(170, 5, 179) Good(196, 5, 161) Good(227, 5, 239) Good(199, 5, 188) Good(174, 5, 188) Good(30, 0, 46) Good(44, 0, 58) 
Good(212, 5, 231) Good(241, 5, 250) Good(129, 3, 139) Good(229, 5, 242) Good(182, 5, 171) Good(73, 1, 17) Good(154, 5, 152) Good(237, 5, 247) Good(177, 4, 193) Good(168, 4, 176) 
Good(124, 3, 93) Good(236, 5, 245) Good(146, 5, 148) Good(82, 2, 85) Good(224, 5, 237) Good(230, 5, 244) Good(89, 3, 85) Good(194, 4, 207) Good(228, 5, 240) Good(201, 5, 218) 
Good(42, 0, 55) Good(251, 5, 223) Good(23, 1, 27) Good(100, 2, 108) Good(197, 5, 210) Good(246, 5, 207) Good(249, 5, 252) Good(91, 2, 93) Good(238, 5, 248) Good(130, 2, 140) 
Good(202, 4, 219) Good(234, 4, 189) Good(1, 1, 3) Good(204, 4, 220) Good(66, 0, 33) Good(184, 4, 172) Good(27, 0, 17) Good(180, 5, 198) Good(117, 2, 130) Good(217, 4, 175) 
Good(133, 3, 143) Good(165, 4, 172) Good(19, 0, 29) Good(216, 4, 173) Good(207, 5, 226) Good(225, 5, 176) Good(235, 4, 213) Good(215, 4, 171) Good(138, 2, 106) Good(198, 5, 213) 
Good(187, 4, 202) Good(250, 5, 253) Good(208, 4, 226) Good(176, 4, 179) Good(205, 4, 221) Good(211, 5, 229) Good(47, 1, 10) Good(232, 4, 191) Good(131, 3, 94) Good(4, 1, 9) 
Good(128, 2, 118) Good(60, 1, 17) Good(58, 1, 17) Good(203, 4, 214) Good(160, 5, 156) Good(233, 4, 185) Good(126, 3, 134) Good(222, 4, 231) Good(125, 3, 132) Good(84, 3, 87) 
Good(57, 0, 22) Good(106, 2, 118) Good(231, 5, 213) Good(45, 0, 32) Good(116, 2, 128) Good(114, 2, 103) Good(101, 3, 109) Good(111, 2, 127) Good(6, 0, 10) Good(111, 3, 128) 
Good(124, 2, 131) Good(110, 3, 126) Good(108, 2, 123) Good(181, 4, 199) Good(85, 3, 90) Good(107, 2, 109) Good(23, 0, 31) Good(47, 0, 60) Good(107, 3, 121) Good(33, 0, 43) 
Good(24, 0, 32) Good(243, 5, 239) Good(112, 3, 102) Good(105, 3, 118) Good(104, 2, 113) Good(80, 3, 84) Good(63, 0, 72) Good(97, 2, 105) Good(11, 0, 22) Good(92, 3, 88) 
Good(96, 2, 103) Good(41, 0, 57) Good(97, 3, 106) Good(95, 3, 102) Good(93, 2, 94) Good(83, 3, 86) Good(78, 3, 81) Good(77, 3, 79) Good(75, 0, 29) Good(72, 0, 17) 
Good(69, 1, 72) Good(21, 0, 27) Good(59, 0, 68) Good(76, 3, 78) Good(56, 0, 68) Good(53, 1, 61) Good(200, 4, 188) Good(52, 0, 59) Good(50, 0, 10) Good(48, 0, 32) 
Good(157, 5, 154) Good(164, 5, 171) Good(206, 4, 213) Good(44, 1, 55) Good(40, 0, 29) Good(196, 4, 209) Good(99, 2, 107) Good(38, 0, 56) Good(222, 5, 235) Good(37, 0, 55) 
Good(28, 0, 43) Good(26, 1, 36) Good(25, 1, 34) Good(16, 0, 28) Good(15, 0, 27) Good(13, 1, 26) Good(10, 0, 17) 
Num Good(s, a, s') selected: 187 (69.52%)
Num Bad(s) selected: 0 (0.00%)
Num selected features: 3 (3.45%)
Features: 
	0: Num[cell-has-martian] [k=1]
	1: Bool[cell-has-target_martian] [k=1]
	2: Dist[col-has-agent;adjacent_col;col-has-target_martian] [k=4]
Solution found in iteration #1 is correct!
DNF transition-classifier saved in /home/orbital/ws/research/gpl/code/gpl/workspace/space_invaders_2/classifier.txt
Total times: Theory generation: 3.10, Solver: 0.25, TOTAL: 3.38
------------------------------------------------
(END Episode 0)
------------------------------------------------
================================================================================
END OF STEP #1: Train: Explore the state space of the training instances. 5.66 CPU sec - 44.39 MB
================================================================================
================================================================================
(pid: 12407) STARTING STEP #2: Testing of the D2L policy
================================================================================

POLICY:
Features (#: 3; total k: 6; max k = 4):
  (A) Num[cell-has-martian] [k=1]
  (B) Bool[cell-has-target_martian] [k=1]
  (C) Dist[col-has-agent;adjacent_col;col-has-target_martian] [k=4]
Invariants: B>0
Policy:
  1. B>0 AND C>0 AND A=0 -> {A ·, B ↓, C ↑}
  2. B>0 AND C>0 -> {A ·, B ·, C ↓}
  3. B>0 AND C>0 AND A>0 -> {A ↓, B ·, C ↓}, {A ↓, B ·, C ↑}, {A ↓, B ·, C ·}, {A ·, B ·, C ↓}
  4. B>0 AND C=0 -> {A ·, B ·, C ↑}
  5. B>0 AND C=0 AND A=0 -> {A ·, B ·, C ↑}

2021-05-25 10:28:42 INFO     Testing policy in instance: space_invaders - 0
T.MM # T.MM # ..TM # .TM. # ..T. # .... # 
.... # .... # .... # .... # .... # .... # 
.... # .... # .... # .... # .... # .... # 
.... # .... # .... # .... # .... # .... # 
.... # .... # .... # .... # .... # .... # 
..A. # .A.. # A... # A... # .A.. # ..A. # 
1 (p)  1 (p)  2 (p)  1 (p)  1 (p)  2 (p)  
0 (n)  1 (n)  2 (n)  3 (n)  4 (n)  5 (n)  

2021-05-25 10:28:42 INFO     Goal found after expanding 4 nodes
2021-05-25 10:28:42 INFO     The solution was: [1, 1, 2, 2]
2021-05-25 10:28:42 INFO     Testing policy in instance: space_invaders - 1
T.MM # ..TM # ..TM # .... # .... # .... # 
.... # .... # .... # ..TM # ...T # .... # 
.... # .... # .... # .... # .... # .... # 
.... # .... # .... # .... # .... # .... # 
.... # .... # .... # .... # .... # .... # 
.... # .... # .... # .... # .... # .... # 
.... # .... # .... # .... # .... # .... # 
.... # .... # .... # .... # .... # .... # 
.... # .... # .... # .... # .... # .... # 
.A.. # A... # .A.. # .A.. # ..A. # ...A # 
1 (p)  1 (p)  2 (p)  1 (p)  1 (p)  2 (p)  
0 (n)  1 (n)  2 (n)  3 (n)  4 (n)  5 (n)  

2021-05-25 10:28:42 INFO     Goal found after expanding 4 nodes
2021-05-25 10:28:42 INFO     The solution was: [1, 2, 2, 2]
2021-05-25 10:28:42 INFO     Testing policy in instance: space_invaders - 2
T.MM...... # ..TM...... # ..TM...... # .......... # .......... # .......... # 
.......... # .......... # .......... # ..TM...... # ...T...... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # 
.A........ # A......... # .A........ # .A........ # ..A....... # ...A...... # 
1 (p)        1 (p)        2 (p)        1 (p)        1 (p)        2 (p)        
0 (n)        1 (n)        2 (n)        3 (n)        4 (n)        5 (n)        

2021-05-25 10:28:42 INFO     Goal found after expanding 4 nodes
2021-05-25 10:28:42 INFO     The solution was: [1, 2, 2, 2]
2021-05-25 10:28:42 INFO     Testing policy in instance: space_invaders - 3
T.MM. # T.MM. # ..TM. # .TM.. # ..T.. # ..... # 
..... # ..... # ..... # ..... # ..... # ..... # 
..... # ..... # ..... # ..... # ..... # ..... # 
..... # ..... # ..... # ..... # ..... # ..... # 
..... # ..... # ..... # ..... # ..... # ..... # 
..... # ..... # ..... # ..... # ..... # ..... # 
..A.. # .A... # A.... # A.... # .A... # ..A.. # 
1 (p)   1 (p)   2 (p)   1 (p)   1 (p)   2 (p)   
0 (n)   1 (n)   2 (n)   3 (n)   4 (n)   5 (n)   

2021-05-25 10:28:42 INFO     Goal found after expanding 4 nodes
2021-05-25 10:28:42 INFO     The solution was: [1, 1, 2, 2]
2021-05-25 10:28:42 INFO     Testing policy in instance: space_invaders - 4
M..M. # M..M. # T..M. # .T..M # ....M # ....M # ...M. # ...T. # ...T. # ..T.. # ..T.. # ..... # 
T..M. # T..M. # ...M. # ....M # ....T # ....T # ...T. # ..... # ..... # ..... # ..... # ..... # 
..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # 
..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # 
..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # 
..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # 
..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # 
..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # 
A.... # .A... # A.... # A.... # .A... # ..A.. # ..A.. # ...A. # ....A # ....A # ...A. # ..A.. # 
1 (p)   1 (p)   2 (p)   1 (p)   1 (p)   2 (p)   1 (p)   1 (p)   2 (p)   1 (p)   1 (p)   2 (p)   
0 (n)   1 (n)   2 (n)   3 (n)   4 (n)   5 (n)   6 (n)   7 (n)   8 (n)   9 (n)   10 (n)  11 (n)  

2021-05-25 10:28:42 INFO     Goal found after expanding 8 nodes
2021-05-25 10:28:42 INFO     The solution was: [2, 1, 2, 2, 2, 2, 1, 1]
2021-05-25 10:28:42 INFO     Testing policy in instance: space_invaders - 5
















........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # 



1 (p)      1 (p)      2 (p)      1 (p)      1 (p)      2 (p)      1 (p)      1 (p)      2 (p)      1 (p)      1 (p)      2 (p)      1 (p)      1 (p)      2 (p)      1 (p)      1 (p)      2 (p)      1 (p)      1 (p)      2 (p)      1 (p)      1 (p)      2 (p)      1 (p)      1 (p)      2 (p)      1 (p)      1 (p)      2 (p)      1 (p)      1 (p)      2 (p)      1 (p)      1 (p)      2 (p)      1 (p)      1 (p)      2 (p)      1 (p)      1 (p)      2 (p)      1 (p)      1 (p)      2 (p)      1 (p)      1 (p)      2 (p)      1 (p)      1 (p)      2 (p)      1 (p)      1 (p)      2 (p)      1 (p)      1 (p)      
0 (n)      1 (n)      2 (n)      3 (n)      4 (n)      5 (n)      6 (n)      7 (n)      8 (n)      9 (n)      10 (n)     11 (n)     12 (n)     13 (n)     14 (n)     15 (n)     16 (n)     17 (n)     18 (n)     19 (n)     20 (n)     21 (n)     22 (n)     23 (n)     24 (n)     25 (n)     26 (n)     27 (n)     28 (n)     29 (n)     30 (n)     31 (n)     32 (n)     33 (n)     34 (n)     35 (n)     36 (n)     37 (n)     38 (n)     39 (n)     40 (n)     41 (n)     42 (n)     43 (n)     44 (n)     45 (n)     46 (n)     47 (n)     48 (n)     49 (n)     50 (n)     51 (n)     52 (n)     53 (n)     54 (n)     55 (n)     

2021-05-25 10:28:43 INFO     Goal found after expanding 37 nodes
2021-05-25 10:28:43 INFO     The solution was: [1, 1, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 2, 1, 2, 1, 2, 1, 2, 1, 2]
2021-05-25 10:28:43 INFO     Testing policy in instance: space_invaders - 6
T.MM...... # T.MM...... # ..TM...... # .TM....... # ..T....... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # 
A......... # .A........ # A......... # A......... # .A........ # ..A....... # 
1 (p)        1 (p)        2 (p)        1 (p)        1 (p)        2 (p)        
0 (n)        1 (n)        2 (n)        3 (n)        4 (n)        5 (n)        

2021-05-25 10:28:43 INFO     Goal found after expanding 4 nodes
2021-05-25 10:28:43 INFO     The solution was: [2, 1, 2, 2]
2021-05-25 10:28:43 INFO     Testing policy in instance: space_invaders - 7


.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # ...................T # ...................T # ...................T # ..................T. # ..................T. # ..................T. # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 













.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 


1 (p)                  1 (p)                  2 (p)                  1 (p)                  1 (p)                  2 (p)                  1 (p)                  1 (p)                  2 (p)                  1 (p)                  1 (p)                  2 (p)                  1 (p)                  1 (p)                  2 (p)                  1 (p)                  1 (p)                  2 (p)                  1 (p)                  1 (p)                  2 (p)                  1 (p)                  1 (p)                  2 (p)                  1 (p)                  1 (p)                  2 (p)                  1 (p)                  1 (p)                  2 (p)                  1 (p)                  1 (p)                  
0 (n)                  1 (n)                  2 (n)                  3 (n)                  4 (n)                  5 (n)                  6 (n)                  7 (n)                  8 (n)                  9 (n)                  10 (n)                 11 (n)                 12 (n)                 13 (n)                 14 (n)                 15 (n)                 16 (n)                 17 (n)                 18 (n)                 19 (n)                 20 (n)                 21 (n)                 22 (n)                 23 (n)                 24 (n)                 25 (n)                 26 (n)                 27 (n)                 28 (n)                 29 (n)                 30 (n)                 31 (n)                 

2021-05-25 10:28:43 INFO     Goal found after expanding 21 nodes
2021-05-25 10:28:43 INFO     The solution was: [1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
2021-05-25 10:28:43 INFO     Testing policy in instance: space_invaders - 8
M.M.M. # M.M.M. # M.M.M. # .M.M.M # .T.M.M # .T.M.M # T.M.M. # T.M.M. # ..M.M. # .M.M.. # .T.M.. # .T.M.. # T.M... # T.M... # ..M... # ...... # ...... # ...... # ...... # ...... # ...... # 
T.M.M. # T.M.M. # T.M.M. # .T.M.M # ...M.M # ...M.M # ..M.M. # ..M.M. # ..T.M. # .T.M.. # ...M.. # ...M.. # ..M... # ..M... # ..T... # ..M... # ..M... # ..T... # ...... # ...... # ...... # 
...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ..T... # ..T... # ...... # ..T... # ..T... # ...... # 
...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # 
...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # 
...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # 
...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # 
...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # 
....A. # ...A.. # ..A... # ..A... # .A.... # ..A... # ..A... # .A.... # A..... # A..... # .A.... # ..A... # ..A... # .A.... # A..... # A..... # .A.... # ..A... # ..A... # ...A.. # ..A... # 
1 (p)    1 (p)    2 (p)    1 (p)    1 (p)    2 (p)    1 (p)    1 (p)    2 (p)    1 (p)    1 (p)    2 (p)    1 (p)    1 (p)    2 (p)    1 (p)    1 (p)    2 (p)    1 (p)    1 (p)    2 (p)    
0 (n)    1 (n)    2 (n)    3 (n)    4 (n)    5 (n)    6 (n)    7 (n)    8 (n)    9 (n)    10 (n)   11 (n)   12 (n)   13 (n)   14 (n)   15 (n)   16 (n)   17 (n)   18 (n)   19 (n)   20 (n)   

2021-05-25 10:28:43 INFO     Goal found after expanding 14 nodes
2021-05-25 10:28:43 INFO     The solution was: [1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 1]
2021-05-25 10:28:43 INFO     Testing policy in instance: space_invaders - 9
.....T.... # .....T.... # .......... # 
.......... # .......... # .......... # 
.......... # .......... # .......... # 
.......... # .......... # .......... # 
.......... # .......... # .......... # 
.....A.... # ......A... # .....A.... # 
1 (p)        1 (p)        2 (p)        
0 (n)        1 (n)        2 (n)        

2021-05-25 10:28:43 INFO     Goal found after expanding 2 nodes
2021-05-25 10:28:43 INFO     The solution was: [2, 1]
2021-05-25 10:28:43 INFO     Testing policy in instance: space_invaders - 10
.T.......M # .T.......M # .T.......M # T.......M. # T.......M. # T.......M. # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # T.......M. # ........T. # ........T. # .........T # .........T # .........T # ........T. # ........T. # ........T. # .......T.. # .......T.. # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.....A.... # ....A..... # ...A...... # ...A...... # ..A....... # .A........ # .A........ # A......... # .A........ # .A........ # ..A....... # ...A...... # ...A...... # ....A..... # .....A.... # .....A.... # ......A... # .......A.. # 
1 (p)        1 (p)        2 (p)        1 (p)        1 (p)        2 (p)        1 (p)        1 (p)        2 (p)        1 (p)        1 (p)        2 (p)        1 (p)        1 (p)        2 (p)        1 (p)        1 (p)        2 (p)        
0 (n)        1 (n)        2 (n)        3 (n)        4 (n)        5 (n)        6 (n)        7 (n)        8 (n)        9 (n)        10 (n)       11 (n)       12 (n)       13 (n)       14 (n)       15 (n)       16 (n)       17 (n)       

2021-05-25 10:28:43 INFO     Goal found after expanding 12 nodes
2021-05-25 10:28:43 INFO     The solution was: [1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2]
2021-05-25 10:28:43 INFO     Testing policy in instance: space_invaders - 11
.T........ # .T........ # .T........ # ..T....... # .......... # 
.......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # 
.....A.... # ....A..... # ...A...... # ...A...... # ..A....... # 
1 (p)        1 (p)        2 (p)        1 (p)        1 (p)        
0 (n)        1 (n)        2 (n)        3 (n)        4 (n)        

2021-05-25 10:28:43 INFO     Goal found after expanding 3 nodes
2021-05-25 10:28:43 INFO     The solution was: [1, 1, 1]
2021-05-25 10:28:43 INFO     Testing policy in instance: space_invaders - 12
.........T # .........T # .........T # .......... # .......... # .......... # 
.......... # .......... # .......... # .........T # .........T # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # 
.....A.... # ......A... # .......A.. # .......A.. # ........A. # .........A # 
1 (p)        1 (p)        2 (p)        1 (p)        1 (p)        2 (p)        
0 (n)        1 (n)        2 (n)        3 (n)        4 (n)        5 (n)        

2021-05-25 10:28:43 INFO     Goal found after expanding 4 nodes
2021-05-25 10:28:43 INFO     The solution was: [2, 2, 2, 2]
2021-05-25 10:28:43 INFO     Testing policy in instance: space_invaders - 13
...T # ...T # .... # 
.... # .... # .... # 
.... # .... # .... # 
.... # .... # .... # 
.... # .... # .... # 
.A.. # ..A. # ...A # 
1 (p)  1 (p)  2 (p)  
0 (n)  1 (n)  2 (n)  

2021-05-25 10:28:43 INFO     Goal found after expanding 2 nodes
2021-05-25 10:28:43 INFO     The solution was: [2, 2]
2021-05-25 10:28:43 INFO     Testing policy in instance: space_invaders - 17
M..M # M..M # T..M # .... # .... # .... # .... # .... # .... # .... # .... # 
T..M # T..M # ...M # T..M # T..M # ...M # ..M. # ..M. # ..T. # .T.. # .... # 
.... # .... # .... # ...M # ...M # ...T # ..T. # ..T. # .... # .... # .... # 
.... # .... # .... # .... # .... # .... # .... # .... # .... # .... # .... # 
..A. # .A.. # A... # A... # .A.. # A... # A... # .A.. # ..A. # ..A. # .A.. # 
1 (p)  1 (p)  2 (p)  1 (p)  1 (p)  2 (p)  1 (p)  1 (p)  2 (p)  1 (p)  1 (p)  
0 (n)  1 (n)  2 (n)  3 (n)  4 (n)  5 (n)  6 (n)  7 (n)  8 (n)  9 (n)  10 (n) 

2021-05-25 10:28:43 INFO     Goal found after expanding 7 nodes
2021-05-25 10:28:43 INFO     The solution was: [1, 1, 2, 1, 2, 2, 1]
2021-05-25 10:28:43 INFO     Testing policy in instance: space_invaders - 18
M...M # M...M # M...M # M...M # T...M # T...M # T...M # ....M # ....M # ...M. # ...M. # ...T. # ..... # ..... # ..... # 
T...M # T...M # T...M # T...M # ....M # ....M # ....M # ....T # ....T # ...T. # ...T. # ..... # ...T. # ...T. # ..... # 
..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # 
...A. # ..A.. # .A... # .A... # A.... # .A... # .A... # A.... # .A... # .A... # ..A.. # ...A. # ...A. # ....A # ...A. # 
1 (p)   1 (p)   2 (p)   1 (p)   1 (p)   2 (p)   1 (p)   1 (p)   2 (p)   1 (p)   1 (p)   2 (p)   1 (p)   1 (p)   2 (p)   
0 (n)   1 (n)   2 (n)   3 (n)   4 (n)   5 (n)   6 (n)   7 (n)   8 (n)   9 (n)   10 (n)  11 (n)  12 (n)  13 (n)  14 (n)  

2021-05-25 10:28:43 INFO     Goal found after expanding 10 nodes
2021-05-25 10:28:43 INFO     The solution was: [1, 1, 1, 2, 1, 2, 2, 2, 2, 1]
2021-05-25 10:28:43 INFO     Learnt policy solves the 100.0% of test instances: 16/16
2021-05-25 10:28:43 INFO     Solved instances: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18]
2021-05-25 10:28:43 INFO     Unsolved instances: []
================================================================================
END OF STEP #2: Testing of the D2L policy. 1.19 CPU sec - 44.39 MB
================================================================================

================================================================================
SLTP v.0.2.0
================================================================================
================================================================================
(pid: 26931) STARTING STEP #1: Train: Explore the state space of the training instances
================================================================================
------------------------------------------------
 DOMAIN PARAMETERS: 
------------------------------------------------
------------------------------------------------
domain_name: space_invaders
use_player_as_feature: True
map_cells: True
use_diagonals_for_map_cells: False
use_adjacency: {'col'}
use_bidirectional: {}
sorts_to_use: {'col', 'cell'}
unary_predicates: {}
predicates_arity_1: {}
agent_has_to_shoot: False
adv_can_move_down: True
adv_can_move_up: False
adv_can_kill_agent: False
max_actions: {1: 2, 2: 1}
target_columns: False
------------------------------------------------
------------------------------------------------
(START Episode 0)
------------------------------------------------
------------------------------------------------
(0) Exploration of the training sample:
------------------------------------------------
2021-05-25 13:19:43 INFO     Expanding train instance: space_invaders - 0
#m.mM#
#....#
#....#
#....#
#....#
#..A.#

2021-05-25 13:19:43 INFO     Expanding train instance: space_invaders - 17
#m..m#
#m..M#
#....#
#....#
#..A.#

2021-05-25 13:19:43 INFO     Expanding train instance: space_invaders - 18
#m...m#
#m...M#
#.....#
#...A.#

------------------------------------------------
(0) Generation of the training sample:
------------------------------------------------
2021-05-25 13:19:43 INFO     sample: #states=298, #transition-entries=313, #transitions=313
2021-05-25 13:19:43 INFO     Entire sample: roots: 3, states: 298, transitions: 313 (328 optimal), goals: 13, alive: 285, deadends: 0
2021-05-25 13:19:43 INFO     Printing SAT transition matrix with 298 states, 185 states with some outgoing transition, 6 operators, 313 (non-det) transitions, and 264 (adv) transitions,
------------------------------------------------
(0) Generate the pool of candidate features:
------------------------------------------------
2021-05-25 13:19:43 INFO     Starting generation of feature pool. State sample used to detect redundancies: roots: 3, states: 298, transitions: 313 (328 optimal), goals: 13, alive: 285, deadends: 0
2021-05-25 13:19:43 INFO     Printing sample information to '/home/orbital/ws/research/gpl/code/gpl/workspace/space_invaders_2/sample.io'
2021-05-25 13:19:43 INFO     Invoking C++ feature generation module
2021-05-25 13:19:43 INFO     Executing "/home/orbital/ws/research/gpl/code/gpl/src/generators/adv/featuregen --complexity-bound 5 --timeout 15000 --dist-complexity-bound 4 --cond-complexity-bound 0 --print-denotations --workspace /home/orbital/ws/research/gpl/code/gpl/workspace/space_invaders_2" on directory "/home/orbital/ws/research/gpl/code/gpl/experiments"
reading '/home/orbital/ws/research/gpl/code/gpl/workspace/space_invaders_2/transitions-info.io
BASIS: #concepts=10, #roles=1
ROLES: #roles=2
Generating concepts for k=1. Total concepts: 10 (2, 8, 0, 0, 0, 0)... 0 concepts generated, 3 pruned.
Generating concepts for k=2. Total concepts: 10 (2, 8, 0, 0, 0, 0)... 6 concepts generated, 38 pruned.
Generating concepts for k=3. Total concepts: 16 (2, 8, 6, 0, 0, 0)... 9 concepts generated, 63 pruned.
Generating concepts for k=4. Total concepts: 25 (2, 8, 6, 9, 0, 0)... 23 concepts generated, 146 pruned.
Generating concepts for k=5. Total concepts: 48 (2, 8, 6, 9, 23, 0)... 59 concepts generated, 190 pruned.
Total concepts: 107 (2, 8, 6, 9, 23, 59)... 
A total of 440 concepts were pruned
A total of 0 features were marked as goal-identifying
Generating cardinality features...
Generating distance features...
FEATURES: #features=86, #nullary=2, #boolean=17, #numerical=65, #distance=2, #conditional=0, #comparison=0
Printing concept, role and feature denotations to /home/orbital/ws/research/gpl/code/gpl/workspace/space_invaders_2/*-denotations.io.txt
Serializing all concepts and features to:
	/home/orbital/ws/research/gpl/code/gpl/workspace/space_invaders_2/serialized-concepts.io
	/home/orbital/ws/research/gpl/code/gpl/workspace/space_invaders_2/serialized-features.io
2021-05-25 13:19:45 INFO     Reading feature denotation matrix from /home/orbital/ws/research/gpl/code/gpl/workspace/space_invaders_2/feature-matrix.io
------------------------------------------------
(0) C++ CNF generation module:
------------------------------------------------
2021-05-25 13:19:45 INFO     Calling C++ MaxSAT module
2021-05-25 13:19:45 INFO     Executing "/home/orbital/ws/research/gpl/code/gpl/src/generators/adv/cnfgen --workspace /home/orbital/ws/research/gpl/code/gpl/workspace/space_invaders_2 --v_slack 2 --initial-sample-size 100 --refinement-batch-size 200 --seed 0 --verbosity 2 --acyclicity topological --encodings_dir  --sampling_strategy full --optimal_steps 3 --consistency_bound 2 --n_features 2 --closed --maxsat_iter 20" on directory "/home/orbital/ws/research/gpl/code/gpl/experiments"
Parsing training data... 
reading '/home/orbital/ws/research/gpl/code/gpl/workspace/space_invaders_2/transitions-info.io
TransitionSample::read_dump: #states=298, #transitions=313, #transitions (adv)=264
reading '/home/orbital/ws/research/gpl/code/gpl/workspace/space_invaders_2/feature-matrix.io
FeatureMatrix::read_dump: #states=298, #features=86
Done. Training sample: [states: 298, transitions: 313 (from alive state: 313), unsolvable: 0, goals: 13, unknowns: 0, features: 86, est. size: 0.05 MB.]
Sampling 100 alive states at random


###  STARTING ITERATION 1  ###
Sample [sz=298]: 297, 296, 295, 294, 293, 292, 291, 290, 289, 288, 287, 286, 285, 284, 283, 282, 281, 280, 279, 278, 277, 276, 275, 274, 273, 272, 271, 270, 269, 268, 267, 266, 265, 264, 263, 262, 261, 260, 259, 258, 257, 256, 255, 254, 253, 252, 251, 250, 249, 248, 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 

Number of transitions/equivalence classes: 313/313
Number of necessarily bad transitions/classes: 0/0
Generating CNF encoding for 285 alive states, 313 alive-to-solvable and alive-to-dead transitions and 313 transition equivalence classes
A total of 8949 variables were created
	Select(f): 86
	Good(s, a, s'): 313
	Bad(s): 0
	V(s, d): 8550
Posting distinguishability constraints
A total of 233069 clauses were created
	Policy completeness [1]: 0
	Transition separation [5,6]: 97969
	V descending along good transitions [X]: 10556
	V is total function within bounds [X]: 124260
	Goal separation [X]: 0
	(Weighted) Select(f): 86
Writing final DIMACS file...
CNF [8949 vars, 233069 clauses] generated in 2.79 sec.
Calling: open-wbo_static /home/orbital/ws/research/gpl/code/gpl/workspace/space_invaders_2/theory.wsat > /home/orbital/ws/research/gpl/code/gpl/workspace/space_invaders_2/maxsat_solver_run.log
Call returned with exit code 7680
Solution with cost 6 found in 0.21sec.

Good(1, 1, 3) Good(2, 0, 6) Good(7, 0, 12) Good(12, 1, 24) Good(14, 0, 29) Good(16, 1, 33) Good(17, 1, 35) Good(25, 1, 40) Good(20, 0, 38) Good(27, 0, 41) 
Good(28, 0, 42) Good(30, 0, 43) Good(32, 0, 44) Good(33, 1, 45) Good(34, 1, 49) Good(35, 0, 51) Good(36, 1, 56) Good(37, 0, 56) Good(39, 1, 57) Good(40, 1, 59) 
Good(43, 1, 62) Good(47, 0, 11) Good(13, 1, 26) Good(160, 2, 175) Good(212, 4, 219) Good(190, 5, 192) Good(191, 4, 194) Good(293, 4, 296) Good(140, 2, 148) Good(208, 5, 214) 
Good(203, 4, 198) Good(285, 4, 273) Good(186, 2, 187) Good(97, 1, 103) Good(209, 5, 216) Good(213, 4, 221) Good(216, 4, 227) Good(217, 5, 237) Good(256, 4, 273) Good(179, 2, 171) 
Good(224, 5, 241) Good(224, 4, 205) Good(226, 4, 242) Good(236, 5, 253) Good(229, 4, 246) Good(133, 3, 144) Good(230, 5, 219) Good(110, 3, 112) Good(232, 5, 249) Good(262, 5, 217) 
Good(70, 1, 80) Good(221, 5, 240) Good(278, 4, 291) Good(215, 5, 225) Good(238, 5, 218) Good(121, 2, 127) Good(267, 4, 276) Good(243, 4, 254) Good(201, 5, 205) Good(257, 4, 275) 
Good(228, 5, 245) Good(5, 1, 13) Good(144, 2, 154) Good(181, 2, 186) Good(251, 4, 269) Good(185, 2, 144) Good(204, 5, 207) Good(61, 0, 75) Good(246, 5, 264) Good(232, 4, 245) 
Good(123, 3, 130) Good(245, 5, 240) Good(60, 0, 41) Good(53, 0, 38) Good(196, 4, 191) Good(279, 4, 292) Good(92, 1, 41) Good(48, 0, 69) Good(129, 3, 131) Good(253, 5, 271) 
Good(23, 0, 35) Good(145, 3, 161) Good(274, 4, 284) Good(99, 1, 56) Good(275, 5, 264) Good(197, 5, 200) Good(155, 3, 150) Good(91, 1, 101) Good(276, 4, 264) Good(294, 4, 297) 
Good(214, 5, 223) Good(64, 1, 78) Good(287, 4, 293) Good(44, 0, 65) Good(263, 5, 221) Good(257, 5, 276) Good(234, 4, 219) Good(9, 0, 14) Good(255, 5, 219) Good(142, 3, 151) 
Good(109, 2, 110) Good(4, 1, 11) Good(206, 4, 202) Good(42, 0, 56) Good(137, 3, 150) Good(249, 4, 240) Good(19, 0, 36) Good(266, 4, 274) Good(193, 4, 197) Good(189, 4, 190) 
Good(170, 3, 134) Good(283, 4, 288) Good(233, 4, 247) Good(295, 4, 258) Good(290, 4, 243) Good(242, 5, 254) Good(260, 4, 278) Good(66, 0, 73) Good(216, 5, 231) Good(211, 5, 218) 
Good(46, 0, 41) Good(130, 2, 134) Good(259, 4, 216) Good(252, 5, 270) Good(244, 5, 261) Good(250, 4, 265) Good(120, 3, 124) Good(248, 5, 268) Good(241, 4, 210) Good(11, 0, 18) 
Good(113, 2, 118) Good(175, 2, 183) Good(174, 2, 164) Good(173, 3, 164) Good(172, 2, 178) Good(102, 1, 107) Good(74, 1, 88) Good(169, 3, 163) Good(162, 3, 169) Good(83, 0, 99) 
Good(159, 2, 130) Good(157, 2, 173) Good(157, 3, 174) Good(153, 2, 169) Good(115, 2, 120) Good(136, 3, 148) Good(156, 2, 171) Good(118, 3, 122) Good(152, 2, 150) Good(63, 1, 41) 
Good(148, 2, 164) Good(147, 3, 164) Good(199, 4, 195) Good(72, 1, 56) Good(146, 3, 163) Good(22, 0, 37) Good(277, 4, 289) Good(139, 2, 146) Good(111, 2, 114) Good(205, 5, 210) 
Good(136, 2, 147) Good(126, 2, 119) Good(68, 0, 79) Good(280, 5, 235) Good(52, 0, 72) Good(143, 3, 154) Good(272, 5, 227) Good(141, 2, 150) Good(133, 2, 143) Good(108, 1, 56) 
Good(281, 5, 239) Good(19, 1, 37) Good(132, 3, 142) Good(149, 3, 168) Good(105, 0, 108) Good(130, 3, 138) Good(98, 0, 104) Good(0, 0, 1) Good(119, 2, 124) Good(282, 4, 286) 
Good(220, 4, 231) Good(105, 1, 75) Good(213, 5, 222) Good(166, 2, 172) Good(101, 1, 94) Good(100, 1, 62) Good(135, 3, 146) Good(89, 0, 41) Good(229, 5, 247) Good(247, 4, 264) 
Good(86, 0, 98) Good(50, 1, 71) Good(84, 0, 38) Good(198, 4, 192) Good(58, 1, 74) Good(83, 1, 42) Good(81, 1, 98) Good(79, 0, 95) Good(226, 5, 243) Good(78, 1, 94) 
Good(77, 1, 93) Good(76, 1, 90) Good(75, 0, 56) Good(10, 1, 15) Good(167, 2, 174) Good(73, 1, 87) Good(71, 0, 82) Good(69, 0, 56) Good(117, 2, 121) Good(176, 3, 177) 
Good(222, 4, 240) Good(55, 0, 71) Good(52, 1, 69) 
Good(1, 1, 3) Good(2, 0, 6) Good(7, 0, 12) Good(12, 1, 24) Good(14, 0, 29) Good(16, 1, 33) Good(17, 1, 35) Good(25, 1, 40) Good(20, 0, 38) Good(27, 0, 41) 
Good(28, 0, 42) Good(30, 0, 43) Good(32, 0, 44) Good(33, 1, 45) Good(34, 1, 49) Good(35, 0, 51) Good(36, 1, 56) Good(37, 0, 56) Good(39, 1, 57) Good(40, 1, 59) 
Good(43, 1, 62) Good(47, 0, 11) Good(13, 1, 26) Good(160, 2, 175) Good(212, 4, 219) Good(190, 5, 192) Good(191, 4, 194) Good(293, 4, 296) Good(140, 2, 148) Good(208, 5, 214) 
Good(203, 4, 198) Good(285, 4, 273) Good(186, 2, 187) Good(97, 1, 103) Good(209, 5, 216) Good(213, 4, 221) Good(216, 4, 227) Good(217, 5, 237) Good(256, 4, 273) Good(179, 2, 171) 
Good(224, 5, 241) Good(224, 4, 205) Good(226, 4, 242) Good(236, 5, 253) Good(229, 4, 246) Good(133, 3, 144) Good(230, 5, 219) Good(110, 3, 112) Good(232, 5, 249) Good(262, 5, 217) 
Good(70, 1, 80) Good(221, 5, 240) Good(278, 4, 291) Good(215, 5, 225) Good(238, 5, 218) Good(121, 2, 127) Good(267, 4, 276) Good(243, 4, 254) Good(201, 5, 205) Good(257, 4, 275) 
Good(228, 5, 245) Good(5, 1, 13) Good(144, 2, 154) Good(181, 2, 186) Good(251, 4, 269) Good(185, 2, 144) Good(204, 5, 207) Good(61, 0, 75) Good(246, 5, 264) Good(232, 4, 245) 
Good(123, 3, 130) Good(245, 5, 240) Good(60, 0, 41) Good(53, 0, 38) Good(196, 4, 191) Good(279, 4, 292) Good(92, 1, 41) Good(48, 0, 69) Good(129, 3, 131) Good(253, 5, 271) 
Good(23, 0, 35) Good(145, 3, 161) Good(274, 4, 284) Good(99, 1, 56) Good(275, 5, 264) Good(197, 5, 200) Good(155, 3, 150) Good(91, 1, 101) Good(276, 4, 264) Good(294, 4, 297) 
Good(214, 5, 223) Good(64, 1, 78) Good(287, 4, 293) Good(44, 0, 65) Good(263, 5, 221) Good(257, 5, 276) Good(234, 4, 219) Good(9, 0, 14) Good(255, 5, 219) Good(142, 3, 151) 
Good(109, 2, 110) Good(4, 1, 11) Good(206, 4, 202) Good(42, 0, 56) Good(137, 3, 150) Good(249, 4, 240) Good(19, 0, 36) Good(266, 4, 274) Good(193, 4, 197) Good(189, 4, 190) 
Good(170, 3, 134) Good(283, 4, 288) Good(233, 4, 247) Good(295, 4, 258) Good(290, 4, 243) Good(242, 5, 254) Good(260, 4, 278) Good(66, 0, 73) Good(216, 5, 231) Good(211, 5, 218) 
Good(46, 0, 41) Good(130, 2, 134) Good(259, 4, 216) Good(252, 5, 270) Good(244, 5, 261) Good(250, 4, 265) Good(120, 3, 124) Good(248, 5, 268) Good(241, 4, 210) Good(11, 0, 18) 
Good(113, 2, 118) Good(175, 2, 183) Good(174, 2, 164) Good(173, 3, 164) Good(172, 2, 178) Good(102, 1, 107) Good(74, 1, 88) Good(169, 3, 163) Good(162, 3, 169) Good(83, 0, 99) 
Good(159, 2, 130) Good(157, 2, 173) Good(157, 3, 174) Good(153, 2, 169) Good(115, 2, 120) Good(136, 3, 148) Good(156, 2, 171) Good(118, 3, 122) Good(152, 2, 150) Good(63, 1, 41) 
Good(148, 2, 164) Good(147, 3, 164) Good(199, 4, 195) Good(72, 1, 56) Good(146, 3, 163) Good(22, 0, 37) Good(277, 4, 289) Good(139, 2, 146) Good(111, 2, 114) Good(205, 5, 210) 
Good(136, 2, 147) Good(126, 2, 119) Good(68, 0, 79) Good(280, 5, 235) Good(52, 0, 72) Good(143, 3, 154) Good(272, 5, 227) Good(141, 2, 150) Good(133, 2, 143) Good(108, 1, 56) 
Good(281, 5, 239) Good(19, 1, 37) Good(132, 3, 142) Good(149, 3, 168) Good(105, 0, 108) Good(130, 3, 138) Good(98, 0, 104) Good(0, 0, 1) Good(119, 2, 124) Good(282, 4, 286) 
Good(220, 4, 231) Good(105, 1, 75) Good(213, 5, 222) Good(166, 2, 172) Good(101, 1, 94) Good(100, 1, 62) Good(135, 3, 146) Good(89, 0, 41) Good(229, 5, 247) Good(247, 4, 264) 
Good(86, 0, 98) Good(50, 1, 71) Good(84, 0, 38) Good(198, 4, 192) Good(58, 1, 74) Good(83, 1, 42) Good(81, 1, 98) Good(79, 0, 95) Good(226, 5, 243) Good(78, 1, 94) 
Good(77, 1, 93) Good(76, 1, 90) Good(75, 0, 56) Good(10, 1, 15) Good(167, 2, 174) Good(73, 1, 87) Good(71, 0, 82) Good(69, 0, 56) Good(117, 2, 121) Good(176, 3, 177) 
Good(222, 4, 240) Good(55, 0, 71) Good(52, 1, 69) 
Num Good(s, a, s') selected: 213 (68.05%)
Num Bad(s) selected: 0 (0.00%)
Num selected features: 3 (3.49%)
Features: 
	0: Num[cell-has-martian] [k=1]
	1: Bool[cell-has-target_martian] [k=1]
	2: Dist[col-has-agent;adjacent_col;col-has-target_martian] [k=4]
Solution found in iteration #1 is correct!
DNF transition-classifier saved in /home/orbital/ws/research/gpl/code/gpl/workspace/space_invaders_2/classifier.txt
Total times: Theory generation: 2.80, Solver: 0.21, TOTAL: 3.03
------------------------------------------------
(END Episode 0)
------------------------------------------------
================================================================================
END OF STEP #1: Train: Explore the state space of the training instances. 4.75 CPU sec - 49.14 MB
================================================================================
================================================================================
(pid: 26947) STARTING STEP #2: Testing of the D2L policy
================================================================================

POLICY:
Features (#: 3; total k: 6; max k = 4):
  (A) Num[cell-has-martian] [k=1]
  (B) Bool[cell-has-target_martian] [k=1]
  (C) Dist[col-has-agent;adjacent_col;col-has-target_martian] [k=4]
Invariants: B>0
Policy:
  1. B>0 AND C>0 AND A>0 -> {A ↓, B ·, C ↑}, {A ↓, B ·, C ↓}, {A ↓, B ·, C ·}
  2. B>0 AND C>0 AND A=0 -> {A ·, B ↓, C ↑}
  3. B>0 AND C=0 -> {A ·, B ·, C ↑}
  4. B>0 AND C>0 -> {A ·, B ·, C ↓}
  5. B>0 AND C=0 AND A=0 -> {A ·, B ·, C ↑}

2021-05-25 13:19:48 INFO     Testing policy in instance: space_invaders - 0
m.mM # M.m. # M.m. # .... # .... # .... # .... # .... # 
.... # .... # .... # M.m. # M.m. # ..M. # .M.. # .... # 
.... # .... # .... # .... # .... # .... # .... # .... # 
.... # .... # .... # .... # .... # .... # .... # .... # 
.... # .... # .... # .... # .... # .... # .... # .... # 
..A. # ...A # ..A. # ..A. # .A.. # A... # A... # .A.. # 
1 (p)  1 (p)  2 (p)  1 (p)  1 (p)  2 (p)  1 (p)  1 (p)  
0 (n)  1 (n)  2 (n)  3 (n)  4 (n)  5 (n)  6 (n)  7 (n)  

2021-05-25 13:19:48 INFO     Goal found after expanding 5 nodes
2021-05-25 13:19:48 INFO     The solution was: [2, 1, 1, 1, 2]
2021-05-25 13:19:48 INFO     Testing policy in instance: space_invaders - 1
m.Mm # M..m # M..m # .... # .... # .... # .... # .... # 
.... # .... # .... # M..m # ...M # ...M # ..M. # .... # 
.... # .... # .... # .... # .... # .... # .... # .... # 
.... # .... # .... # .... # .... # .... # .... # .... # 
.... # .... # .... # .... # .... # .... # .... # .... # 
.... # .... # .... # .... # .... # .... # .... # .... # 
.... # .... # .... # .... # .... # .... # .... # .... # 
.... # .... # .... # .... # .... # .... # .... # .... # 
.... # .... # .... # .... # .... # .... # .... # .... # 
.A.. # ..A. # .A.. # .A.. # A... # .A.. # .A.. # ..A. # 
1 (p)  1 (p)  2 (p)  1 (p)  1 (p)  2 (p)  1 (p)  1 (p)  
0 (n)  1 (n)  2 (n)  3 (n)  4 (n)  5 (n)  6 (n)  7 (n)  

2021-05-25 13:19:48 INFO     Goal found after expanding 5 nodes
2021-05-25 13:19:48 INFO     The solution was: [2, 1, 1, 2, 2]
2021-05-25 13:19:48 INFO     Testing policy in instance: space_invaders - 2
M.mm...... # ..Mm...... # ..Mm...... # .Mm....... # .Mm....... # ..M....... # .M........ # .M........ # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.A........ # A......... # .A........ # .A........ # ..A....... # .A........ # .A........ # ..A....... # .A........ # 
1 (p)        1 (p)        2 (p)        1 (p)        1 (p)        2 (p)        1 (p)        1 (p)        2 (p)        
0 (n)        1 (n)        2 (n)        3 (n)        4 (n)        5 (n)        6 (n)        7 (n)        8 (n)        

2021-05-25 13:19:48 INFO     Goal found after expanding 6 nodes
2021-05-25 13:19:48 INFO     The solution was: [1, 2, 2, 1, 2, 1]
2021-05-25 13:19:48 INFO     Testing policy in instance: space_invaders - 3
M.mm. # M.mm. # ..Mm. # ..... # ..... # ..... # ..... # ..... # ..... # 
..... # ..... # ..... # ..Mm. # ..Mm. # ...M. # ..M.. # ..M.. # ..... # 
..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # 
..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # 
..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # 
..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # 
..A.. # .A... # A.... # A.... # .A... # ..A.. # ..A.. # ...A. # ..A.. # 
1 (p)   1 (p)   2 (p)   1 (p)   1 (p)   2 (p)   1 (p)   1 (p)   2 (p)   
0 (n)   1 (n)   2 (n)   3 (n)   4 (n)   5 (n)   6 (n)   7 (n)   8 (n)   

2021-05-25 13:19:48 INFO     Goal found after expanding 6 nodes
2021-05-25 13:19:48 INFO     The solution was: [1, 1, 2, 2, 2, 1]
2021-05-25 13:19:48 INFO     Testing policy in instance: space_invaders - 4
m..m. # m..m. # m..m. # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # 
m..M. # m..M. # m..M. # m..m. # m..m. # m..m. # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # 
..... # ..... # ..... # m..M. # M.... # M.... # m..m. # m..m. # m..M. # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # 
..... # ..... # ..... # ..... # ..... # ..... # M.... # M.... # ..... # m..M. # m..M. # m..M. # .m..M # .m..M # .M... # M.... # M.... # M.... # ..... # ..... # ..... # 
..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # M.... # M.... # ..... # 
..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # 
..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # 
..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # 
A.... # .A... # ..A.. # ..A.. # ...A. # ..A.. # ..A.. # .A... # A.... # A.... # .A... # ..A.. # ..A.. # ...A. # ....A # ....A # ...A. # ..A.. # ..A.. # .A... # A.... # 
1 (p)   1 (p)   2 (p)   1 (p)   1 (p)   2 (p)   1 (p)   1 (p)   2 (p)   1 (p)   1 (p)   2 (p)   1 (p)   1 (p)   2 (p)   1 (p)   1 (p)   2 (p)   1 (p)   1 (p)   2 (p)   
0 (n)   1 (n)   2 (n)   3 (n)   4 (n)   5 (n)   6 (n)   7 (n)   8 (n)   9 (n)   10 (n)  11 (n)  12 (n)  13 (n)  14 (n)  15 (n)  16 (n)  17 (n)  18 (n)  19 (n)  20 (n)  

2021-05-25 13:19:48 INFO     Goal found after expanding 14 nodes
2021-05-25 13:19:48 INFO     The solution was: [2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1]
2021-05-25 13:19:48 INFO     Testing policy in instance: space_invaders - 5
m.mm.... # m.mm.... # m.mm
m.mm.... # m.mm.... # m.mm.... # m.mm.... # m.mm.... # m.mm.... # .m.mm... # .m.mm... # .m.mm
m.mm.... # m.mm.... # m.mm.... # m.mm.... # m.mm.... # m.mm.... # .m.mm... # .m.mm... # .m.mm... # .m.mm... # .m.mm... # .m.mm... # ..m.mm.. # ..m.mm.. # ..m.mm.. # ...m.mm. # ...m.mm. # ...m.mm. # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # 
m.mm.... # m.mm.... # m.mm.... # m.mm.... # m.mm.... # m.mm.... # .m.mm... # .m.mm... # .m.mm... # .m.mm... # .m.mm... # .m.mm... # ..m.mm.. # ..m.mm.. # ..m.mm.. # ...m.mm. # ...m.mm. # ...m.mm. # ...m.mm. # ...m.mm. # ...m.mm. # ....m.mm # ....m.mm # ....m.mm # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # 
m.mm.... # m.mm.... # m.mm.... # m.mm.... # m.mm.... # m.mm.... # .m.mm... # .m.mm... # .m.mm... # .m.mm... # .m.mm... # .m.mm... # ..m.mm.. # ..m.mm.. # ..m.mm.. # ...m.mm. # ...m.mm. # ...m.mm. # ...m.mm. # ...m.mm. # ...m.mm. # ....m.mm # ....m.mm # ....m.mm # ....m.mm # ....m.mm # ....m.mm # ...m.mm. # ...m.mm. # ...m.mm. # ..m.mm.. # ..m.mm.. # ..m.mm.. # .m.mm... # .m.mm... # .m.mm... # ..m.mm.. # ..m.mm.. # ..m.mm.. # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # 
m.Mm.... # m.Mm.... # M..m.... # m.mm.... # m.mm.... # m.mm.... # .m.mm... # .m.mm... # .m.mm... # .m.mm... # .m.mm... # .m.mm... # ..m.mm.. # ..m.mm.. # ..m.mm.. # ...m.mm. # ...m.mm. # ...m.mm. # ...m.mm. # ...m.mm. # ...m.mm. # ....m.mm # ....m.mm # ....m.mm # ....m.mm # ....m.mm # ....m.mm # ...m.mm. # ...m.mm. # ...m.mm. # ..m.mm.. # ..m.mm.. # ..m.mm.. # .m.mm... # .m.mm... # .m.mm... # ..m.mm.. # ..m.mm.. # ..M.mm.. # ..m.mm.. # ..m.mm.. # ..m.mm.. # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # 
........ # ........ # ........ # M..m.... # M..m.... # ...M.... # ....M... # ....M... # ....M... # .m.mm... # .m.mm... # .M.mm... # ..M.mm.. # ..M.mm.. # ....mM.. # .....mM. # .....mM. # .....mM. # ...m.mm. # ...m.mm. # ...m.mM. # ....m.mM # ....m.m. # ....m.M. # ....m.mm # ....m.mm # ....m.mm # ...m.mm. # ...m.mm. # ...m.mm. # ..m.mm.. # ..m.mm.. # ..m.mM.. # .m.mM... # .m.mM... # .M.m.... # ..M.m... # ..M.m... # ....m... # ..M.mm.. # ..M.mm.. # ....mm.. # ..m.mm.. # ..m.mm.. # ..m.mm.. # .m.mm... # .m.mm... # .M.mm... # ..M.mm.. # ..M.mm.. # ....mM.. # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # 
........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ....M... # ....M... # ........ # ........ # ........ # ........ # ........ # ........ # ........ # .....mM. # .....mM. # .....m.. # ......m. # ......M. # ........ # ....m.M. # ....m.M. # ....M... # ...M.... # ...M.... # ...M.... # ..M..... # ..M..... # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ....m... # ....m... # ....M... # ....mm.. # ....mm.. # ....mM.. # ...mM... # ...mM... # ...m.... # ....m... # ....m... # ....m... # ....mM.. # ....mM.. # ....mM.. # ........ # ........ # ........ # ........ # ........ # 
........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ....M... # ....M... # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ....m... # ....m... # ....m... # ....mM.. # ....m... # ....M... # ...M.... # ........ # 
m... # ....M... # ........ # ........ # ........ # 







........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # ........ # 

....A... # ...A.... # ..A..... # ..A..... # .A...... # A....... # A....... # .A...... # ..A..... # ..A..... # ...A.... # ....A... # ....A... # ...A.... # ..A..... # ..A..... # ...A.... # ....A... # ....A... # .....A.. # ......A. # ......A. # .......A # ......A. # ......A. # .......A # ......A. # ......A. # .....A.. # ....A... # ....A... # ...A.... # ..A..... # ..A..... # ...A.... # ....A... # ....A... # ...A.... # ..A..... # ..A..... # ...A.... # ..A..... # ..A..... # ...A.... # ....A... # ....A... # .....A.. # ....A... # ....A... # ...A.... # ..A..... # ..A..... # ...A.... # ....A... # ....A... # .....A.. # ....A... # ....A... # ...A.... # 
1 (p)      1 (p)      2 (p)      1 (p)      1 (p)      2 (p)      1 (p)      1 (p)      2 (p)      1 (p)      1 (p)      2 (p)      1 (p)      1 (p)      2 (p)      1 (p)      1 (p)      2 (p)      1 (p)      1 (p)      2 (p)      1 (p)      1 (p)      2 (p)      1 (p)      1 (p)      2 (p)      1 (p)      1 (p)      2 (p)      1 (p)      1 (p)      2 (p)      1 (p)      1 (p)      2 (p)      1 (p)      1 (p)      2 (p)      1 (p)      1 (p)      2 (p)      1 (p)      1 (p)      2 (p)      1 (p)      1 (p)      2 (p)      1 (p)      1 (p)      2 (p)      1 (p)      1 (p)      2 (p)      1 (p)      1 (p)      2 (p)      1 (p)      1 (p)      
0 (n)      1 (n)      2 (n)      3 (n)      4 (n)      5 (n)      6 (n)      7 (n)      8 (n)      9 (n)      10 (n)     11 (n)     12 (n)     13 (n)     14 (n)     15 (n)     16 (n)     17 (n)     18 (n)     19 (n)     20 (n)     21 (n)     22 (n)     23 (n)     24 (n)     25 (n)     26 (n)     27 (n)     28 (n)     29 (n)     30 (n)     31 (n)     32 (n)     33 (n)     34 (n)     35 (n)     36 (n)     37 (n)     38 (n)     39 (n)     40 (n)     41 (n)     42 (n)     43 (n)     44 (n)     45 (n)     46 (n)     47 (n)     48 (n)     49 (n)     50 (n)     51 (n)     52 (n)     53 (n)     54 (n)     55 (n)     56 (n)     57 (n)     58 (n)     

2021-05-25 13:19:48 INFO     Goal found after expanding 39 nodes
2021-05-25 13:19:48 INFO     The solution was: [1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1]
2021-05-25 13:19:48 INFO     Testing policy in instance: space_invaders - 6
M.mm...... # M.mm...... # ..Mm...... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # ..Mm...... # ..Mm...... # ...M...... # ....M..... # ....M..... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
A......... # .A........ # A......... # A......... # .A........ # ..A....... # ..A....... # ...A...... # ....A..... # 
1 (p)        1 (p)        2 (p)        1 (p)        1 (p)        2 (p)        1 (p)        1 (p)        2 (p)        
0 (n)        1 (n)        2 (n)        3 (n)        4 (n)        5 (n)        6 (n)        7 (n)        8 (n)        

2021-05-25 13:19:48 INFO     Goal found after expanding 6 nodes
2021-05-25 13:19:48 INFO     The solution was: [2, 1, 2, 2, 2, 2]
2021-05-25 13:19:48 INFO     Testing policy in instance: space_invaders - 7
M..................m # M..................m # M..................m # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # M..................m # M..................m














.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 
.................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # .................... # 


1 (p)                  1 (p)                  2 (p)                  1 (p)                  1 (p)                  2 (p)                  1 (p)                  1 (p)                  2 (p)                  1 (p)                  1 (p)                  2 (p)                  1 (p)                  1 (p)                  2 (p)                  1 (p)                  1 (p)                  2 (p)                  1 (p)                  1 (p)                  2 (p)                  1 (p)                  1 (p)                  2 (p)                  1 (p)                  1 (p)                  2 (p)                  1 (p)                  1 (p)                  2 (p)                  1 (p)                  1 (p)                  
0 (n)                  1 (n)                  2 (n)                  3 (n)                  4 (n)                  5 (n)                  6 (n)                  7 (n)                  8 (n)                  9 (n)                  10 (n)                 11 (n)                 12 (n)                 13 (n)                 14 (n)                 15 (n)                 16 (n)                 17 (n)                 18 (n)                 19 (n)                 20 (n)                 21 (n)                 22 (n)                 23 (n)                 24 (n)                 25 (n)                 26 (n)                 27 (n)                 28 (n)                 29 (n)                 30 (n)                 31 (n)                 

2021-05-25 13:19:48 INFO     Goal found after expanding 21 nodes
2021-05-25 13:19:48 INFO     The solution was: [1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
2021-05-25 13:19:48 INFO     Testing policy in instance: space_invaders - 8
m.m.m. # m.m.m. # m.m.m. # .m.m.m # .m.m.m # .m.m.m # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # 
M.m.m. # M.m.m. # M.m.m. # .M.m.m # ...m.M # ...m.M # .m.m.m # .m.m.m # .m.m.m # m.m.m. # m.m.m. # M.m.m. # .M.m.m # .M.m.m # .M.m.m # M.m.m. # M.m.m. # ..m.m. # .m.m.. # .M.m.. # .M.m.. # ...... # ...... # ...... # ...... # ...... # 
...... # ...... # ...... # ...... # ...... # ...... # ...m.M # ...m.M # ...m.M # ..m.M. # ..m.M. # ..m... # ...m.. # ...m.. # ...m.. # ..m... # ..m... # ..M... # .M.... # ...... # ...... # .M.m.. # ...M.. # ...M.. # ...... # ...... # 
...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...M.. # ...... # 
...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # 
...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # 
...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # 
...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # ...... # 
....A. # ...A.. # ..A... # ..A... # .A.... # ..A... # ..A... # ...A.. # ....A. # ....A. # .....A # ....A. # ....A. # ...A.. # ..A... # ..A... # .A.... # A..... # A..... # .A.... # ..A... # ..A... # .A.... # ..A... # ..A... # ...A.. # 
1 (p)    1 (p)    2 (p)    1 (p)    1 (p)    2 (p)    1 (p)    1 (p)    2 (p)    1 (p)    1 (p)    2 (p)    1 (p)    1 (p)    2 (p)    1 (p)    1 (p)    2 (p)    1 (p)    1 (p)    2 (p)    1 (p)    1 (p)    2 (p)    1 (p)    1 (p)    
0 (n)    1 (n)    2 (n)    3 (n)    4 (n)    5 (n)    6 (n)    7 (n)    8 (n)    9 (n)    10 (n)   11 (n)   12 (n)   13 (n)   14 (n)   15 (n)   16 (n)   17 (n)   18 (n)   19 (n)   20 (n)   21 (n)   22 (n)   23 (n)   24 (n)   25 (n)   

2021-05-25 13:19:48 INFO     Goal found after expanding 17 nodes
2021-05-25 13:19:48 INFO     The solution was: [1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2]
2021-05-25 13:19:48 INFO     Testing policy in instance: space_invaders - 9
.....M.... # .....M.... # .......... # 
.......... # .......... # .......... # 
.......... # .......... # .......... # 
.......... # .......... # .......... # 
.......... # .......... # .......... # 
.....A.... # ......A... # .....A.... # 
1 (p)        1 (p)        2 (p)        
0 (n)        1 (n)        2 (n)        

2021-05-25 13:19:48 INFO     Goal found after expanding 2 nodes
2021-05-25 13:19:48 INFO     The solution was: [2, 1]
2021-05-25 13:19:48 INFO     Testing policy in instance: space_invaders - 10
.M.......m # .M.......m # .M.......m # M.......m. # M.......m. # M.......m. # .M.......m # .M.......m # .........M # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .........M # .........M # .........M # ........M. # ........M. # ........M. # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # ........M. # ........M. # ........M. # .......M.. # .......M.. # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # .......... # 
.....A.... # ....A..... # ...A...... # ...A...... # ..A....... # .A........ # .A........ # ..A....... # .A........ # .A........ # ..A....... # ...A...... # ...A...... # ....A..... # .....A.... # .....A.... # ......A... # .......A.. # .......A.. # ........A. # .......A.. # 
1 (p)        1 (p)        2 (p)        1 (p)        1 (p)        2 (p)        1 (p)        1 (p)        2 (p)        1 (p)        1 (p)        2 (p)        1 (p)        1 (p)        2 (p)        1 (p)        1 (p)        2 (p)        1 (p)        1 (p)        2 (p)        
0 (n)        1 (n)        2 (n)        3 (n)        4 (n)        5 (n)        6 (n)        7 (n)        8 (n)        9 (n)        10 (n)       11 (n)       12 (n)       13 (n)       14 (n)       15 (n)       16 (n)       17 (n)       18 (n)       19 (n)       20 (n)       

2021-05-25 13:19:48 INFO     Goal found after expanding 14 nodes
2021-05-25 13:19:48 INFO     The solution was: [1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 1]
2021-05-25 13:19:48 INFO     Testing policy in instance: space_invaders - 11
.M........ # .M........ # .M........ # ..M....... # .......... # 
.......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # 
.....A.... # ....A..... # ...A...... # ...A...... # ..A....... # 
1 (p)        1 (p)        2 (p)        1 (p)        1 (p)        
0 (n)        1 (n)        2 (n)        3 (n)        4 (n)        

2021-05-25 13:19:48 INFO     Goal found after expanding 3 nodes
2021-05-25 13:19:48 INFO     The solution was: [1, 1, 1]
2021-05-25 13:19:49 INFO     Testing policy in instance: space_invaders - 12
.........M # .........M # .........M # ........M. # .......... # 
.......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # 
.......... # .......... # .......... # .......... # .......... # 
.....A.... # ......A... # .......A.. # .......A.. # ........A. # 
1 (p)        1 (p)        2 (p)        1 (p)        1 (p)        
0 (n)        1 (n)        2 (n)        3 (n)        4 (n)        

2021-05-25 13:19:49 INFO     Goal found after expanding 3 nodes
2021-05-25 13:19:49 INFO     The solution was: [2, 2, 2]
2021-05-25 13:19:49 INFO     Testing policy in instance: space_invaders - 13
...M # ...M # .... # 
.... # .... # .... # 
.... # .... # .... # 
.... # .... # .... # 
.... # .... # .... # 
.A.. # ..A. # ...A # 
1 (p)  1 (p)  2 (p)  
0 (n)  1 (n)  2 (n)  

2021-05-25 13:19:49 INFO     Goal found after expanding 2 nodes
2021-05-25 13:19:49 INFO     The solution was: [2, 2]
2021-05-25 13:19:49 INFO     Testing policy in instance: space_invaders - 17
m..m # m..M # m..M # .... # .... # .... # .... # .... # .... # .... # .... # .... # 
m..M # m... # m... # m..M # m... # m... # .m.. # .M.. # .M.. # ..M. # ..M. # .... # 
.... # .... # .... # m... # M... # M... # .M.. # .... # .... # .... # .... # .... # 
.... # .... # .... # .... # .... # .... # .... # .... # .... # .... # .... # .... # 
..A. # ...A # ..A. # ..A. # ...A # ..A. # ..A. # .A.. # ..A. # ..A. # ...A # ..A. # 
1 (p)  1 (p)  2 (p)  1 (p)  1 (p)  2 (p)  1 (p)  1 (p)  2 (p)  1 (p)  1 (p)  2 (p)  
0 (n)  1 (n)  2 (n)  3 (n)  4 (n)  5 (n)  6 (n)  7 (n)  8 (n)  9 (n)  10 (n) 11 (n) 

2021-05-25 13:19:49 INFO     Goal found after expanding 8 nodes
2021-05-25 13:19:49 INFO     The solution was: [2, 1, 2, 1, 1, 2, 2, 1]
2021-05-25 13:19:49 INFO     Testing policy in instance: space_invaders - 18
m...m # m...m # m...m # m...m # m...m # m...m # m...m # m...M # m...M # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # 
m...M # M.... # M.... # M.... # M.... # M.... # M.... # ..... # ..... # m...M # m...M # m...M # m...M # M.... # M.... # .M... # .M... # ..... # 
..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # ..... # 
...A. # ....A # ...A. # ...A. # ..A.. # .A... # .A... # A.... # .A... # .A... # ..A.. # ...A. # ...A. # ....A # ...A. # ...A. # ..A.. # .A... # 
1 (p)   1 (p)   2 (p)   1 (p)   1 (p)   2 (p)   1 (p)   1 (p)   2 (p)   1 (p)   1 (p)   2 (p)   1 (p)   1 (p)   2 (p)   1 (p)   1 (p)   2 (p)   
0 (n)   1 (n)   2 (n)   3 (n)   4 (n)   5 (n)   6 (n)   7 (n)   8 (n)   9 (n)   10 (n)  11 (n)  12 (n)  13 (n)  14 (n)  15 (n)  16 (n)  17 (n)  

2021-05-25 13:19:49 INFO     Goal found after expanding 12 nodes
2021-05-25 13:19:49 INFO     The solution was: [2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1]
2021-05-25 13:19:49 INFO     Learnt policy solves the 100.0% of test instances: 16/16
2021-05-25 13:19:49 INFO     Solved instances: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18]
2021-05-25 13:19:49 INFO     Unsolved instances: []
================================================================================
END OF STEP #2: Testing of the D2L policy. 0.80 CPU sec - 49.14 MB
================================================================================
